{"version":3,"sources":["config/msal-config.js","contexts/AuthContext.jsx","Auth/Phase.js","contexts/PhaseContext.jsx","Auth/Can.js","Auth/Proposal.js","Auth/Topic.js","Auth/ability.js","msalHelpers.js","utils/api.axios.js","utils/graph.axios.js","contexts/CreateProposalContext.js","components/Auth/ErrorComponent.jsx","components/Auth/Loading.jsx","components/AppLoading.jsx","utils/topic.js","components/PrimaryButton.jsx","utils/yupSchemas/yupTopicSchema.js","components/MultiLineInput.jsx","components/Input.jsx","components/Tags.jsx","components/TargetCoursesInput.jsx","components/TopicManagement/RegularTopicModalContents.jsx","components/TopicManagement/StudentDefinedTopicModalContents.jsx","components/TopicManagement/TopicModal.jsx","components/TopicManagement/index.jsx","components/TopicList.jsx","components/CollapsableAlert.jsx","components/AddTopicForm.jsx","components/CountdownToDate.jsx","components/Welcome.jsx","components/UserManagement/Assignment/UploadButton.jsx","components/CSVUploader.jsx","components/UserManagement/Assignment/UserEmailInputField.jsx","components/PaginatedTable.jsx","components/Buttons/BackButton.jsx","components/UserManagement/Assignment/StudentAssignment.jsx","components/Table/TablePaginationActions.jsx","components/UserManagement/UserTable.jsx","components/UserManagement/StudentManagement.jsx","components/UserManagement/Assignment/SupervisorAssignment.jsx","components/UserManagement/SupervisorManagement.jsx","utils/yupSchemas/ManageCoordinator.js","components/UserManagement/Coordinator/ListCoordinatorTable.jsx","components/UserManagement/Coordinator/CoordinatorManagement.jsx","components/NavBar.jsx","components/Header.jsx","utils/proposal.js","utils/yupSchemas/yupProposalSchema.js","components/Proposals/ProposalModal.jsx","components/Proposals/ManageProposal.jsx","components/ViewTopic.jsx","components/Proposals/Breadcrumb.jsx","components/Proposals/CreateProposal.jsx","components/Proposals/CreateProposalStep2.jsx","components/Proposals/CreateProposalFinish.jsx","components/NoRole.jsx","components/NotFound.jsx","components/TopicManagement/TopicProposals.jsx","components/Proposals/ViewProposal.jsx","components/PhaseManagement.jsx","components/Help/HelpPage.jsx","components/APIUnavailable.jsx","App.js","styles/theme.js","index.js"],"names":["config","auth","clientId","process","tenantId","applicationResourceId","scopes","graph","customApi","endpoints","login","appRoles","displayName","priority","msalConfig","redirectUri","postLogoutRedirectUri","loginRequest","authority","REACT_APP_REDIRECT","AuthContext","createContext","AuthContextProvider","props","useState","user","setUser","Provider","value","setUserObject","userObject","children","Phase","attrs","Object","assign","this","PhaseContext","PhaseContextProvider","phase","setPhase","currentPhase","setCurrentPhase","AbilityContext","Can","createContextualCan","Consumer","Proposal","Topic","defineAbilityFor","AbilityBuilder","Ability","can","cannot","build","name","role","student","id","supervisor","getAccessToken","instance","request","a","acquireTokenSilent","catch","err","console","log","acquireTokenPopup","error","tokenResponse","accessToken","silentTokenResponse","account","isSetup","service","axios","create","baseURL","timeout","interceptors","use","req","headers","Authorization","setup","inst","acc","Promise","resolve","reject","get","then","Error","CreateProposalContext","CreateProposalContextProvider","step","isCustomProposal","topic","contextData","setCntxData","setContextData","values","prevData","useData","useContext","ErrorComponent","Typography","variant","errorCode","Loading","AppLoading","topicStatuses","draft","suggestion","active","archived","assigned","prev_term","topicStatusToHumanFriendlyString","status","useStyles","makeStyles","theme","root","margin","spacing","PrimaryButton","loading","styles","Button","type","fullWidth","color","className","disabled","CircularProgress","size","defaultProps","defaultValues","title","description","additionalNotes","tags","targetCourses","basicSchemaObj","yup","required","min","formSchema","shape","editFormSchema","oneOf","MultiLineInput","forwardRef","ref","TextField","readOnly","inputRef","multiline","rows","rowsMax","inputProps","Input","SHOW_PARENT","TreeSelect","Tags","treeData","setTreeData","setLoading","useEffect","api","res","data","finally","tProps","onChange","treeCheckable","showCheckedStrategy","placeholder","bordered","showSearch","varaint","style","marginLeft","border","borderRadius","width","pointerEvents","FormHelperText","helperText","courses","TargetCoursesInput","control","label","render","Autocomplete","multiple","options","getOptionLabel","option","defaultValue","filterSelectedOptions","renderInput","params","_","formControl","minWidth","flex","RegularTopicModalContents","classes","register","editMode","errors","message","vals","FormControl","Select","MenuItem","StudentDefinedTopicModalContents","selectEmpty","marginTop","readOnlySelect","buttonProgress","green","position","left","dialogCloseButton","top","right","palette","grey","fontSize","dialogEditButton","marginBottom","TopicModal","setEditMode","savingChanges","setSavingChanges","useForm","resolver","yupResolver","reValidateMode","handleSubmit","reset","toggleEditMode","Dialog","maxWidth","open","dialogOpen","onClose","aria-labelledby","zIndex","disableBackdropClick","IconButton","onClick","confirm","setDialogOpen","Cancel","DialogTitle","endIcon","Edit","Divider","DialogContent","onSubmit","differences","reduce","result","key","isEqual","keys","length","compareDiffs","post","_id","refresh","TopicManagement","topics","setTopics","customTopic","setCustomTopic","selectedTopic","setSelectedTopic","changingSupervisionStatus","setChangingSupervisionStatus","history","useHistory","refreshTopicList","retrievedTopics","retrievedCustomTopic","forEach","push","updatedSelectedTopic","filter","openTopicDetailsDialog","Container","align","I","Paper","elevation","FormControlLabel","Switch","checked","e","body","target","TableContainer","component","Table","TableHead","TableRow","TableCell","TableBody","scope","colSpan","map","to","proposalCount","display","flexDirection","flexGrow","topicType","TopicList","supervisors","setSupervisors","query","selected","alignContent","justifyContent","slice","tag","Box","backgroundColor","padding","CollapsableAlert","Collapse","in","Alert","severity","action","aria-label","setOpen","AddTopicForm","alert","setAlert","alertOpen","submitting","setSubmitting","ownerType","toLowerCase","resp","autoComplete","countdown","paddingBottom","textAlign","countdownCol","countdownColElement","Countdown","days","hours","sec","timeLeft","setTimeLeft","interval","updateInterval","setInterval","date","calculateCountdown","stop","endDate","diff","Date","parse","years","Math","floor","clearInterval","addLeadingZeros","String","phaseBreakdownTitle","phaseTitle","Welcome","varint","fontWeight","CountdownToDate","toString","UploadButton","onUpload","buttonRef","React","createRef","papaParseConfig","header","CSVUploader","handleOpenDialog","current","handleRemoveFile","removeFile","onFileLoad","studentsArray","email","onAdd","onError","file","inputElem","reason","noClick","noDrag","noProgressBar","onRemoveFile","marginRight","height","paddingLeft","paddingRight","borderWidth","borderStyle","borderColor","lineHeight","paddingTop","alignItems","input","iconButton","divider","UserEmailInputField","InputBase","endAdornment","Tooltip","Checkbox","edge","disableRipple","includeEmailPrefix","onChangeEmailPrefix","orientation","AddCircle","flexShrink","not_found","exists","no_assignment","TablePaginationActions","count","page","rowsPerPage","onChangePage","event","ceil","userTooltipTitles","PaginatedTable","visable","setVisable","setPage","setRowsPerPage","removableEntries","colspan","startIcon","removeEntry","TableFooter","TablePagination","rowsPerPageOptions","SelectProps","native","newPage","onChangeRowsPerPage","parseInt","ActionsComponent","button","BackButton","dense","goBack","StudentAssignment","currentEmail","setCurrentEmail","students","setStudents","setIncludeEmailPrefix","setAlertOpen","uploading","setUploading","studentsMap","emailsMap","index","indexOf","remainingStudents","undefined","includes","bulkStudents","studentsList","prefix","trim","test","studentEmail","filteredStudents","s","UserTable","remove","removing","StudentManagement","visableStudents","setVisableStudents","setRemoving","refreshStudentList","maxwidth","searched","studentId","SupervisorAssignment","supervisorsMap","remainingsupervisors","bulksupervisors","supervisorsList","filteredSupervisors","SupervisorManagement","visableSupervisors","setVisableSupervisors","refreshSupervisorList","supervisorId","coordinator","ListCoordinatorTable","refreshing","handleRemove","Transition","Slide","direction","ManageCoordinator","selectedCoordinator","setSelectedCoordinator","assignedCoordinators","setAssignedCoordinators","setRefreshing","tableAlert","setTableAlert","tableAlertOpen","setTableAlertOpen","refreshAssignedCoordinators","coordinators","deleteCoordinator","coordinatorId","TransitionComponent","aria-describedby","DialogContentText","DialogActions","ArrowForward","navDisplayFlex","linkText","textDecoration","textTransform","linkButton","NavBar","useMsal","accountAbbr","accounts","split","el","anchorEl","setAnchorEl","Toolbar","currentTarget","Avatar","Menu","keepMounted","Boolean","getContentAnchorEl","anchorOrigin","vertical","horizontal","transformOrigin","logout","onRedirectNavigate","ListItemIcon","ListItemText","primary","appBar","drawer","Header","AppBar","proposalStatuses","submitted","under_review","pending_edits","accepted","rejected","proposalStatusToHumanFriendlyString","chooseMeMessage","environment","languages","ProposalModal","proposal","chooseMessage","supervisorMessage","NextActionButton","updateStatus","proposalId","downgradeStatus","ProposalsTable","setSelectedProposal","ManageProposal","supervisorProposals","setSupervisorProposals","customProposals","setCustomProposals","selectedProposal","refreshProposalList","proposals","custom","val","class1","ViewTopic","useParams","setTopic","invalidCode","setInvalidCode","hasProposal","Breadcrumb","CreateProposal","validTopic","setValidTopic","topicId","revalidate","formData","handleNextStep","submitProposal","saveAsDraft","response","NoRole","accountType","NotFound","TopicProposals","setProposals","responseType","when","is","ViewProposal","setProposal","submittingResponse","setSubmittingResponse","refreshProposal","Grid","container","item","xs","PhaseManagement","updating","setUpdating","phases","setPhases","phasesData","p","moment","start_date","onOk","temp","updatePhase","format","showTime","renderExtraFooter","i","isAfter","hidden","heading","paragraph","HelpPage","APIUnavailable","Pages","ability","generateAbilitiesFor","allowForPhase","Array","isArray","exact","path","CreateProposalStep2","CreateProposalFinish","App","appReady","setAppReady","inProgress","useAccount","authRequest","apiSetup","r","axiosGraphInstance","rolePriority","roleData","roleObject","appRoleId","JSON","stringify","phaseDoc","startDate","end_date","localAccountId","interactionType","InteractionType","Redirect","authenticationRequest","errorComponent","loadingComponent","createMuiTheme","main","secondary","red","A400","background","default","msalInstance","PublicClientApplication","AppProvider","ThemeProvider","StrictMode","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b41b9647.chunk.js","sourcesContent":["const config = {\n  auth: {\n    clientId: process.env.REACT_APP_AZURE_CLIENT_ID,\n    tenantId: process.env.REACT_APP_AZURE_TENANT_ID,\n    applicationResourceId: process.env.REACT_APP_AZURE_APPLICATION_RESOURCE_ID,\n    scopes: {\n      graph: ['user.read', 'offline_access'],\n      customApi: [process.env.REACT_APP_AZURE_CUSTOM_API_SCOPE]\n    }\n  },\n  endpoints: {\n    graph: process.env.REACT_APP_MS_GRAPH_ENDPOINT,\n    login: process.env.REACT_APP_MS_LOGIN_ENDPOINT,\n    customApi: process.env.REACT_APP_API_URL\n  },\n  appRoles: {\n    '170a8e98-463f-4f72-b783-963f05923afc': {\n      displayName: 'Student',\n      priority: 1\n    },\n    'de311fc8-6e4b-4ee3-8e55-c5e82319a94f': {\n      displayName: 'Supervisor',\n      priority: 2\n    },\n    'fb3c340f-81e7-4c73-bca8-637e0efc1fc2': {\n      displayName: 'Coordinator',\n      priority: 3\n    },\n    '141cfda0-c415-4aba-a6af-20bfc1a639f7': {\n      displayName: 'Administrator',\n      priority: 4\n    }\n  }\n}\n\nconst msalConfig = {\n  auth: {\n    clientId: config.auth.clientId,\n    redirectUri: process.env.REACT_APP_REDIRECT_URL,\n    postLogoutRedirectUri: process.env.REACT_APP_POST_LOGOUT_URL\n  }\n}\n\nconst loginRequest = {\n  authority: `${config.endpoints.login}/${config.auth.tenantId}`,\n  scopes: ['user.read', 'offline_access'],\n  redirectUri: process.env.REACT_APP_REDIRECT\n}\n\nexport { msalConfig, loginRequest, config }\n","import React, { createContext, useState } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AuthContext = createContext()\n\nconst AuthContextProvider = props => {\n  const [user, setUser] = useState(null)\n\n  const setUserObject = userObject => {\n    setUser(userObject)\n  }\n\n  return (\n    <AuthContext.Provider value={{ user: user, setUserObject: setUserObject }}>\n      {props.children}\n    </AuthContext.Provider>\n  )\n}\n\nAuthContextProvider.propTypes = {\n  children: PropTypes.node.isRequired\n}\n\nexport default AuthContextProvider\n","class Phase {\n  constructor(attrs) {\n    Object.assign(this, attrs)\n  }\n}\n\nexport default Phase\n","import React, { createContext, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport Phase from '../Auth/Phase'\n\nexport const PhaseContext = createContext()\n\nconst PhaseContextProvider = props => {\n  const [phase, setPhase] = useState(null)\n\n  const setCurrentPhase = currentPhase => {\n    setPhase(currentPhase)\n  }\n\n  return (\n    <PhaseContext.Provider\n      value={{ currentPhase: new Phase({ ...phase }), setCurrentPhase }}>\n      {props.children}\n    </PhaseContext.Provider>\n  )\n}\n\nPhaseContextProvider.propTypes = {\n  children: PropTypes.node.isRequired\n}\n\nexport default PhaseContextProvider\n","import { createContext } from 'react'\nimport { createContextualCan } from '@casl/react'\n\nexport const AbilityContext = createContext()\nexport const Can = createContextualCan(AbilityContext.Consumer)\n","class Proposal {\n  constructor(attrs) {\n    Object.assign(this, attrs)\n  }\n}\n\nexport default Proposal\n","class Topic {\n  constructor(attrs) {\n    Object.assign(this, attrs)\n  }\n}\n\nexport default Topic\n","import { AbilityBuilder, Ability } from '@casl/ability'\nimport Phase from './Phase'\nimport Proposal from './Proposal'\nimport Topic from './Topic'\n\nexport default function defineAbilityFor(user) {\n  const { can, cannot, build } = new AbilityBuilder(Ability)\n\n  // Setup to allow specific actions to be taken during each phase\n  can('takeActionPhaseOne', Phase.name, { phase: 1 })\n  can('takeActionPhaseTwo', Phase.name, { phase: 2 })\n  can('takeActionPhaseThree', Phase.name, { phase: 3 })\n  can('takeActionPhaseFour', Phase.name, { phase: 4 })\n\n  switch (user.role) {\n    case 'Student':\n      can('read', Topic.name)\n      can('create', Proposal.name)\n      can('read', Proposal.name, { student: user.id })\n      can('manage', Proposal.name, { student: user.id })\n      break\n    case 'Supervisor':\n      can('read', Topic.name)\n      can('create', Topic.name)\n      can('manage', Topic.name, { supervisor: user.id })\n      can('read', Proposal.name)\n      can('respond', Proposal.name, { 'topic.supervisor': user.id })\n      break\n    // eslint-disable-next-line\n    case 'Coordinator':\n      can('manage', 'Student')\n      can('manage', 'Supervisor')\n      can('read', Topic.name)\n      can('create', Topic.name)\n      can('manage', Topic.name, { supervisor: user.id })\n      can('read', Proposal.name)\n      can('respond', Proposal.name, { 'topic.supervisor': user.id })\n      break\n    case 'Administrator':\n      can('manage', 'Coordinator')\n      can('update', Phase.name)\n      break\n    default:\n      cannot('*', '*')\n  }\n\n  return build()\n}\n","import axios from 'axios'\nimport { config } from './config/msal-config'\n\nexport const getProfileData = (instance, account) => {\n  const request = {\n    authority: `${config.endpoints.login}/${config.auth.tenantId}`,\n    scopes: config.auth.scopes,\n    account: account\n  }\n\n  getTokenSilent(instance, request)\n    .then(resp => {\n      console.log(resp.accessToken)\n      const bearer = `Bearer ${resp.accessToken}`\n\n      const options = {\n        headers: {\n          Authorization: bearer\n        }\n      }\n      axios\n        .get(`${config.endpoints.graph}/me`, options)\n        .then(res => {\n          console.log(res)\n        })\n        .catch(err => console.error(err))\n    })\n    .catch(err => console.log(err))\n}\n\nexport const getTokenSilent = (instance, request) => {\n  return instance.acquireTokenSilent(request).catch(error => {\n    console.warn('silent token acquisition fails. acquiring token using popup')\n    console.log(error)\n    if (error.name === 'InteractionRequiredAuthError') {\n      // fallback to interaction when silent call fails\n      return instance\n        .acquireTokenPopup(request)\n        .then(tokenResponse => {\n          console.log(tokenResponse)\n          return tokenResponse\n        })\n        .catch(error => {\n          console.error(error)\n        })\n    } else {\n      console.warn(error)\n    }\n  })\n}\n\nexport const getAccessToken = async (instance, request) => {\n  const silentTokenResponse = await instance\n    .acquireTokenSilent(request)\n    .catch(async err => {\n      console.log('Interaction Required for access token')\n      if (err.name === 'InteractionRequiredAuthError') {\n        const tokenResponse = await instance\n          .acquireTokenPopup(request)\n          .catch(error => {\n            console.error(error)\n          })\n        return tokenResponse.accessToken\n      }\n\n      console.log('Error getting access token: ', err)\n    })\n\n  if (silentTokenResponse && silentTokenResponse.accessToken) {\n    return silentTokenResponse.accessToken\n  } else {\n    console.log('Silent Error: ', silentTokenResponse)\n  }\n}\n\nexport const getUserProfileByEmail = (instance, account, email) => {\n  const request = {\n    authority: `${config.endpoints.login}/${config.auth.tenantId}`,\n    scopes: config.auth.scopes.concat('User.Read.All'),\n    account: account\n  }\n\n  getTokenSilent(instance, request)\n    .then(res => {\n      const bearer = `Bearer ${res.accessToken}`\n\n      const options = {\n        headers: {\n          Authorization: bearer\n        }\n      }\n\n      axios\n        .get(`${config.endpoints.graph}/users/${email}`, options)\n        .then(response => {\n          console.log(response.data.id)\n        })\n        .catch(err => {\n          console.log(err)\n        })\n    })\n    .catch(err => {\n      console.log(err)\n    })\n}\n\nexport const assignRoleToUser = (instance, account, subjectUserId, roleId) => {\n  const request = {\n    authority: `${config.endpoints.login}/${config.auth.tenantId}`,\n    scopes: config.auth.scopes.concat([\n      'Directory.AccessAsUser.All',\n      'Directory.ReadWrite.All',\n      'Directory.Read.All'\n    ]),\n    account: account\n  }\n\n  getTokenSilent(instance, request)\n    .then(res => {\n      const bearer = `Bearer ${res.accessToken}`\n\n      const options = {\n        headers: {\n          Authorization: bearer\n        }\n      }\n\n      const url = `${config.endpoints.graph}/users/${subjectUserId}/appRoleAssignments`\n      const body = {\n        principalId: subjectUserId,\n        principalType: 'User',\n        resourceId: config.auth.applicationResourceId,\n        appRoleId: roleId\n      }\n\n      axios\n        .post(url, body, options)\n        .then(response => {\n          console.log(response)\n        })\n        .catch(err => {\n          console.log(err)\n        })\n    })\n    .catch(err => {\n      console.log(err)\n    })\n}\n\nexport const getToken = (instance, account) => {\n  console.log(config)\n  const request = {\n    authority: `${config.endpoints.login}/${config.auth.tenantId}`,\n    scopes: config.auth.scopes,\n    account: account\n  }\n\n  getTokenSilent(instance, request)\n    .then(res => {\n      console.log(res.accessToken)\n    })\n    .catch(err => {\n      console.log(err)\n    })\n}\n","import axios from 'axios'\nimport { config } from '../config/msal-config'\n\nimport { getAccessToken } from '../msalHelpers'\n\nlet instance = null\nlet account = null\nlet isSetup = false\n\nconst service = axios.create({\n  baseURL: config.endpoints.customApi,\n  timeout: 4000\n})\n\nservice.interceptors.request.use(async req => {\n  console.log('Sending request')\n\n  console.log(req)\n\n  let request = {\n    authority: `${config.endpoints.login}/${config.auth.tenantId}`,\n    scopes: config.auth.scopes.customApi,\n    account: account\n  }\n\n  const accessToken = await getAccessToken(instance, request)\n  if (accessToken) {\n    req.headers = {\n      Authorization: `Bearer ${accessToken}`\n    }\n  } else {\n    delete req.headers.Authorization\n  }\n\n  return req\n})\n\nexport const setup = async (inst, acc) => {\n  return new Promise((resolve, reject) => {\n    if (isSetup) {\n      return resolve('Is setup')\n    }\n\n    instance = inst\n    account = acc\n\n    // Check that API is available\n    service\n      .get('/ping', { timeout: 2000 })\n      .then(() => {\n        isSetup = true\n        return resolve('setup complete')\n      })\n      .catch(err => {\n        // Timeout\n        console.log(err)\n        console.log('Timed Out: Server not Available')\n        return reject(new Error('Timed Out: Server not Available'))\n      })\n  })\n}\n\nexport const printDetails = () => {\n  console.log(instance, account)\n}\n\nexport default service\n","import axios from 'axios'\nimport { config } from '../config/msal-config'\n\nimport { getAccessToken } from '../msalHelpers'\n\nlet instance = null\nlet account = null\nlet isSetup = false\n\nconst service = axios.create({\n  baseURL: config.endpoints.graph,\n  timeout: 4000\n})\n\nservice.interceptors.request.use(async req => {\n  console.log('Sending request to Graph')\n\n  let request = {\n    authority: `${config.endpoints.login}/${config.auth.tenantId}`,\n    scopes: config.auth.scopes.graph,\n    account: account\n  }\n\n  const accessToken = await getAccessToken(instance, request)\n  if (accessToken) {\n    req.headers = {\n      Authorization: `Bearer ${accessToken}`\n    }\n  } else {\n    delete req.headers.Authorization\n  }\n\n  return req\n})\n\nexport const setup = (inst, acc) => {\n  if (isSetup) {\n    return\n  }\n  instance = inst\n  account = acc\n  isSetup = true\n}\n\nexport const printDetails = () => {\n  console.log(instance, account)\n}\n\nexport default service\n","/* eslint-disable react/prop-types */\nimport React, { createContext, useState, useContext } from 'react'\n\nconst CreateProposalContext = createContext()\n\nexport const CreateProposalContextProvider = ({ children }) => {\n  const [contextData, setCntxData] = useState({\n    step: 0,\n    isCustomProposal: false,\n    topic: null\n  })\n\n  const setContextData = values => {\n    setCntxData(prevData => ({\n      ...prevData,\n      ...values\n    }))\n  }\n\n  return (\n    <CreateProposalContext.Provider value={{ contextData, setContextData }}>\n      {children}\n    </CreateProposalContext.Provider>\n  )\n}\n\nexport const useData = () => useContext(CreateProposalContext)\n","import React, { Typography } from '@material-ui/core'\nimport PropTypes from 'prop-types'\n\nexport default function ErrorComponent({ error }) {\n  console.log(error)\n  return (\n    <Typography variant=\"h6\">An Error Occurred: {error.errorCode}</Typography>\n  )\n}\n\nErrorComponent.propTypes = {\n  error: PropTypes.string.isRequired\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nexport default function Loading() {\n  return <Typography variant=\"h6\">Authentication in progress...</Typography>\n}\n","import React from 'react'\nimport Typography from '@material-ui/core/Typography'\n\nexport default function AppLoading() {\n  return <Typography variant=\"h6\">Getting things ready...</Typography>\n}\n","const topicStatuses = {\n  draft: 'Draft',\n  suggestion: 'Ready for Submission',\n  active: 'Active',\n  archived: 'Archived',\n  assigned: 'Assigned',\n  prev_term: 'From Previous Term'\n}\nconst topicStatusToHumanFriendlyString = status => topicStatuses[status]\n\nexport { topicStatusToHumanFriendlyString }\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Button from '@material-ui/core/Button'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}))\n\nconst PrimaryButton = ({ children, loading, ...props }) => {\n  const styles = useStyles()\n\n  return (\n    <Button\n      type=\"submit\"\n      fullWidth\n      variant=\"contained\"\n      color=\"primary\"\n      className={styles.root}\n      disabled={loading}\n      {...props}>\n      {loading && <CircularProgress size={14} />}\n      {!loading && children}\n    </Button>\n  )\n}\n\nPrimaryButton.propTypes = {\n  children: PropTypes.node.isRequired,\n  loading: PropTypes.bool\n}\n\nPrimaryButton.defaultProps = {\n  loading: false\n}\n\nexport default PrimaryButton\n","import * as yup from 'yup'\n\nconst defaultValues = {\n  title: '',\n  description: '',\n  additionalNotes: '',\n  tags: [],\n  targetCourses: []\n}\n\nconst basicSchemaObj = {\n  title: yup.string().required('Topic must have a title'),\n  description: yup.string().required('Toic must have a description'),\n  tags: yup\n    .array(yup.string())\n    .min(1, 'You must specify at least one tag for your Topic'),\n  additionalNotes: yup.string(),\n  targetCourses: yup.array(yup.string())\n}\n\nconst formSchema = yup.object().shape({ ...basicSchemaObj })\n\nconst editFormSchema = yup.object().shape({\n  ...basicSchemaObj,\n  status: yup\n    .string()\n    .oneOf([\n      'draft',\n      'suggestion',\n      'active',\n      'archived',\n      'assigned',\n      'prev_term'\n    ])\n})\n\nexport { formSchema, editFormSchema, defaultValues }\n","/* eslint-disable react/display-name */\nimport React, { forwardRef } from 'react'\nimport PropTypes from 'prop-types'\nimport TextField from '@material-ui/core/TextField'\n\nconst MultiLineInput = forwardRef((props, ref) => {\n  return (\n    <TextField\n      variant={props.readOnly ? 'standard' : 'outlined'}\n      margin=\"normal\"\n      inputRef={ref}\n      fullWidth\n      multiline\n      rows={3}\n      rowsMax={6}\n      inputProps={{ readOnly: props.readOnly }}\n      {...props}\n    />\n  )\n})\n\nMultiLineInput.defaultProps = {\n  readOnly: false\n}\n\nMultiLineInput.propTypes = {\n  readOnly: PropTypes.bool\n}\n\nexport default MultiLineInput\n","/* eslint-disable react/display-name */\nimport React, { forwardRef } from 'react'\nimport PropTypes from 'prop-types'\nimport TextField from '@material-ui/core/TextField'\n\nconst Input = forwardRef((props, ref) => {\n  return (\n    <TextField\n      variant={props.readOnly ? 'standard' : 'outlined'}\n      margin=\"normal\"\n      inputRef={ref}\n      fullWidth\n      inputProps={{ readOnly: props.readOnly }}\n      {...props}\n    />\n  )\n})\n\nInput.defaultProps = {\n  readOnly: false\n}\n\nInput.propTypes = {\n  readOnly: PropTypes.bool\n}\n\nexport default Input\n","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { TreeSelect } from 'antd'\nimport 'antd/dist/antd.css'\n\nimport { Typography, FormHelperText } from '@material-ui/core'\nimport api from '../utils/api.axios'\n\nconst { SHOW_PARENT } = TreeSelect\n\nconst Tags = props => {\n  const [treeData, setTreeData] = useState(null)\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    api\n      .get('/tag')\n      .then(res => {\n        setTreeData(res.data)\n      })\n      .catch(err => {\n        console.log(err)\n      })\n      .finally(() => {\n        setLoading(false)\n      })\n  }, [])\n\n  let tProps = {\n    value: props.value,\n    onChange: props.onChange,\n    treeCheckable: true,\n    showCheckedStrategy: SHOW_PARENT,\n    placeholder: 'Search Topic Tags',\n    bordered: true,\n    showSearch: true,\n    size: 'large'\n  }\n\n  if (loading) {\n    return (\n      <Typography varaint=\"body1\" style={{ marginLeft: '5px' }}>\n        Loading Tags List...\n      </Typography>\n    )\n  }\n\n  let style = {\n    margin: '10px 0'\n  }\n\n  // TODO: Clean up how the tags are highlighted for errors\n\n  if (props.error) {\n    style.border = 'solid 1px red'\n    style.borderRadius = '5px'\n  }\n\n  return (\n    <div style={style}>\n      <TreeSelect\n        {...tProps}\n        treeData={treeData}\n        style={{\n          width: '100%',\n          pointerEvents: props.disabled ? 'none' : 'auto'\n        }}\n      />\n      {props.error && (\n        <FormHelperText error={props.error}>{props.helperText}</FormHelperText>\n      )}\n    </div>\n  )\n}\n\nTags.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.array.isRequired,\n  disabled: PropTypes.bool,\n  error: PropTypes.bool,\n  helperText: PropTypes.string\n}\n\nexport default Tags\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Controller } from 'react-hook-form'\n\nimport { Autocomplete } from '@material-ui/lab'\nimport Input from './Input'\n\n// TODO: Load courses from DB\nconst courses = [\n  'LM051 - Computer Systems',\n  'LM052 - Course 2',\n  'Lm053 - Course 3'\n]\n\nconst TargetCoursesInput = ({\n  control,\n  error,\n  helperText,\n  disabled,\n  label\n}) => {\n  return (\n    <Controller\n      render={({ onChange, value }) => (\n        <Autocomplete\n          multiple\n          value={value}\n          options={courses}\n          getOptionLabel={option => option}\n          defaultValue={value}\n          disabled={disabled}\n          filterSelectedOptions\n          renderInput={params => (\n            <Input\n              {...params}\n              variant=\"outlined\"\n              label={label || 'Choose a Course'}\n              placeholder=\"Course\"\n              error={error}\n              helperText={helperText}\n            />\n          )}\n          onChange={(_, data) => onChange(data)}\n        />\n      )}\n      name=\"targetCourses\"\n      control={control}\n    />\n  )\n}\n\nTargetCoursesInput.propTypes = {\n  control: PropTypes.object.isRequired,\n  error: PropTypes.bool,\n  disabled: PropTypes.bool,\n  helperText: PropTypes.string\n}\n\nexport default TargetCoursesInput\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Controller } from 'react-hook-form'\n\nimport { FormControl, Select, MenuItem } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport MultiLineInput from '../MultiLineInput'\nimport Input from '../Input'\nimport Tags from '../Tags'\nimport TargetCoursesInput from '../TargetCoursesInput'\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    minWidth: 300,\n    flex: 1\n  }\n}))\n\nconst RegularTopicModalContents = props => {\n  const classes = useStyles()\n  return (\n    <>\n      <Input\n        ref={props.register}\n        name=\"title\"\n        label=\"Title\"\n        readOnly={!props.editMode}\n        error={!!props.errors.title}\n        helperText={props.errors?.title?.message}\n      />\n      <MultiLineInput\n        inputRef={props.register}\n        name=\"description\"\n        label=\"Description\"\n        readOnly={!props.editMode}\n        error={!!props.errors.description}\n        helperText={props.errors?.description?.message}\n      />\n\n      <Controller\n        control={props.control}\n        name=\"tags\"\n        render={({ onChange, value }) => (\n          <Tags\n            value={value}\n            onChange={vals => {\n              onChange(vals)\n            }}\n            error={!!props.errors?.tags}\n            helperText={props.errors?.tags?.message}\n            disabled={!props.editMode}\n          />\n        )}\n      />\n\n      <MultiLineInput\n        inputRef={props.register}\n        label=\"Additional Notes\"\n        name=\"additionalNotes\"\n        readOnly={!props.editMode}\n        error={!!props.errors.additionalNotes}\n        helperText={props.errors?.additionalNotes?.message}\n      />\n\n      <TargetCoursesInput\n        control={props.control}\n        error={!!props.errors.targetCourses}\n        helperText={props.errors?.targetCourses?.message}\n        disabled={!props.editMode}\n      />\n\n      <FormControl variant=\"outlined\" className={classes.formControl} fullWidth>\n        <label>Status</label>\n        <Controller\n          render={({ onChange, value }) => (\n            <Select\n              disabled={!props.editMode}\n              value={value}\n              onChange={onChange}>\n              <MenuItem value=\"draft\">Draft</MenuItem>\n              <MenuItem value=\"archived\" style={{ color: 'red' }}>\n                Archived\n              </MenuItem>\n              <MenuItem value=\"active\" disabled>\n                Active\n              </MenuItem>\n              <MenuItem value=\"assigned\" disabled>\n                Assigned\n              </MenuItem>\n              <MenuItem value=\"prev_term\" disabled>\n                From Previous Term\n              </MenuItem>\n            </Select>\n          )}\n          name=\"status\"\n          control={props.control}\n          error={!!props.errors.status}\n          helperText={props.errors?.status?.message}\n        />\n      </FormControl>\n    </>\n  )\n}\n\nRegularTopicModalContents.propTypes = {\n  register: PropTypes.func.isRequired,\n  control: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n  editMode: PropTypes.bool.isRequired\n}\n\nexport default RegularTopicModalContents\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Controller } from 'react-hook-form'\n\nimport MultiLineInput from '../MultiLineInput'\nimport Input from '../Input'\nimport Tags from '../Tags'\nimport TargetCoursesInput from '../TargetCoursesInput'\n\nconst StudentDefinedTopicModalContents = props => {\n  return (\n    <>\n      <Input\n        inputRef={props.register}\n        label=\"Title\"\n        name=\"title\"\n        readOnly={!props.editMode}\n        error={!!props.errors.title}\n        helperText={props.errors?.title?.message}\n      />\n      <MultiLineInput\n        inputRef={props.register}\n        name=\"description\"\n        label=\"Description\"\n        readOnly={!props.editMode}\n        error={!!props.errors.description}\n        helperText={props.errors?.description?.message}\n      />\n\n      <Controller\n        control={props.control}\n        name=\"tags\"\n        render={({ onChange, value }) => (\n          <Tags\n            value={value}\n            onChange={vals => {\n              onChange(vals)\n            }}\n            error={!!props.errors?.tags}\n            helperText={props.errors?.tags?.message}\n            disabled={!props.editMode}\n          />\n        )}\n      />\n\n      <MultiLineInput\n        inputRef={props.register}\n        label=\"Additional Notes\"\n        name=\"additionalNotes\"\n        readOnly={!props.editMode}\n        error={!!props.errors.additionalNotes}\n        helperText={props.errors?.additionalNotes?.message}\n      />\n\n      <TargetCoursesInput\n        control={props.control}\n        error={!!props.errors.targetCourses}\n        helperText={props.errors?.targetCourses?.message}\n        readOnly={!props.editMode}\n      />\n    </>\n  )\n}\n\nStudentDefinedTopicModalContents.propTypes = {\n  register: PropTypes.object.isRequired,\n  control: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n  editMode: PropTypes.bool.isRequired\n}\n\nexport default StudentDefinedTopicModalContents\n","import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { useForm } from 'react-hook-form'\n\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  IconButton,\n  Button,\n  Divider\n} from '@material-ui/core'\nimport { Edit, Cancel } from '@material-ui/icons'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { green } from '@material-ui/core/colors'\n\nimport api from '../../utils/api.axios'\nimport { yupResolver } from '@hookform/resolvers/yup'\nimport { editFormSchema } from '../../utils/yupSchemas/yupTopicSchema.js'\n\nimport PrimaryButton from '../PrimaryButton'\n\nimport RegularTopicModalContents from './RegularTopicModalContents'\nimport StudentDefinedTopicModalContents from './StudentDefinedTopicModalContents'\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    minWidth: 300,\n    flex: 1\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  },\n  readOnlySelect: {\n    width: 300,\n    '&.Mui-disabled option': {\n      color: 'black'\n    }\n  },\n  buttonProgress: {\n    color: green[500],\n    position: 'absolute',\n    left: '50%'\n  },\n  dialogCloseButton: {\n    position: 'absolute',\n    top: theme.spacing(1),\n    right: theme.spacing(1),\n    color: theme.palette.grey[500],\n    fontSize: '28px'\n  },\n  dialogEditButton: {\n    marginBottom: theme.spacing(1)\n  }\n}))\n\nconst TopicModal = props => {\n  const classes = useStyles()\n\n  const defaultValues = (({\n    title,\n    description,\n    tags,\n    additionalNotes,\n    targetCourses,\n    status\n  }) => ({\n    title,\n    description,\n    tags,\n    additionalNotes: additionalNotes || '',\n    targetCourses: targetCourses || [],\n    status\n  }))(props.topic)\n\n  const [editMode, setEditMode] = useState(false)\n  const [savingChanges, setSavingChanges] = useState(false)\n\n  const { register, handleSubmit, errors, control, reset } = useForm({\n    resolver: yupResolver(editFormSchema),\n    reValidateMode: 'onChange',\n    defaultValues\n  })\n\n  useEffect(() => {\n    reset({\n      title: props.topic.title,\n      description: props.topic.description,\n      tags: props.topic.tags,\n      additionalNotes: props.topic.additionalNotes,\n      targetCourses: props.topic.targetCourses,\n      status: props.topic.status\n    })\n  }, [props.topic])\n\n  const toggleEditMode = () => {\n    let edtmd = !editMode\n    setEditMode(edtmd)\n  }\n\n  const compareDiffs = data => {\n    let differences = _.reduce(\n      data,\n      function (result, value, key) {\n        // Compare data and props.topics properties\n        if (!_.isEqual(value, props.topic[key])) result[key] = value\n        return result\n      },\n      {}\n    )\n\n    console.log(differences)\n\n    return Object.keys(differences).length > 0 ? differences : null\n  }\n\n  const onSubmit = data => {\n    let differences = compareDiffs(data)\n\n    console.log(differences)\n\n    if (differences) {\n      setSavingChanges(true)\n      api\n        .post(`/topic/edit/${props.topic._id}`, differences)\n        .then(res => {\n          console.log(res)\n          props.setDialogOpen(false)\n          props.refresh()\n        })\n        .catch(err => {\n          console.log(err)\n        })\n        .finally(() => {\n          setSavingChanges(false)\n          toggleEditMode()\n        })\n    } else {\n      toggleEditMode()\n    }\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth=\"lg\"\n      open={props.dialogOpen}\n      onClose={() => {\n        console.log('impement dialog close')\n      }}\n      aria-labelledby=\"max-width-dialog-title\"\n      style={{ zIndex: '900 !important' }}\n      disableBackdropClick>\n      <IconButton\n        className={classes.dialogCloseButton}\n        onClick={() => {\n          if (\n            editMode &&\n            // eslint-disable-next-line no-restricted-globals\n            confirm(\n              'Unsaved changes will be lost!. Are you sure you want to exit?'\n            ) === false\n          ) {\n            return\n          }\n\n          props.setDialogOpen(false)\n        }}\n        disabled={savingChanges}>\n        <Cancel />\n      </IconButton>\n      <DialogTitle id=\"max-width-dialog-title\">\n        <Button\n          variant=\"contained\"\n          className={classes.dialogEditButton}\n          color={editMode ? 'secondary' : 'primary'}\n          onClick={toggleEditMode}\n          disabled={savingChanges}\n          endIcon={<Edit />}>\n          Toggle Edit Mode\n        </Button>\n        <Divider />\n      </DialogTitle>\n      <DialogContent>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          {props.topic.type === 'regular' ? (\n            <RegularTopicModalContents\n              register={register}\n              control={control}\n              errors={errors}\n              editMode={editMode}\n            />\n          ) : (\n            <StudentDefinedTopicModalContents\n              register={register}\n              control={control}\n              errors={errors}\n              editMode={editMode}\n            />\n          )}\n\n          {editMode && (\n            <PrimaryButton loading={savingChanges}>Save Changes</PrimaryButton>\n          )}\n        </form>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nTopicModal.defaultProps = {\n  topic: {},\n  dialogOpen: false,\n  setDialogOpen: () => {},\n  refresh: () => {}\n}\n\nTopicModal.propTypes = {\n  topic: PropTypes.object.isRequired,\n  dialogOpen: PropTypes.bool.isRequired,\n  setDialogOpen: PropTypes.func.isRequired,\n  refresh: PropTypes.func.isRequired\n}\n\nexport default TopicModal\n","import React, { useState, useEffect, useContext } from 'react'\nimport PropTypes from 'prop-types'\nimport { Link, useHistory } from 'react-router-dom'\n\nimport {\n  Container,\n  Typography,\n  Checkbox,\n  FormControlLabel,\n  Button,\n  TableContainer,\n  Table,\n  TableHead,\n  TableCell,\n  TableRow,\n  TableBody,\n  Paper,\n  Link as MuiLink,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  DialogContentText,\n  DialogActions,\n  Switch\n} from '@material-ui/core'\n\nimport { PhaseContext } from '../../contexts/PhaseContext'\n\nimport api from '../../utils/api.axios'\nimport { topicStatusToHumanFriendlyString } from '../../utils/topic'\n\nimport { Can } from '../../Auth/Can'\n\nimport PrimaryButton from '../PrimaryButton'\nimport TopicModal from './TopicModal'\n\nconst SubmissionDialog = props => {\n  return (\n    <Dialog open={props.open} aria-labelledby=\"form-dialog-title\">\n      <DialogTitle id=\"form-dialog-title\">Submit Topic Suggestions</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          {\n            'All topic suggestions marked as \"Ready for Submission\" will be submitted'\n          }\n          <br />\n        </DialogContentText>\n        <FormControlLabel\n          control={\n            <Checkbox\n              checked={props.checked}\n              onChange={e => props.setChecked(e.target.checked)}\n            />\n          }\n          label=\"I understand\"\n        />\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={() => props.setOpen(false)} color=\"primary\">\n          Cancel\n        </Button>\n        <Button\n          onClick={() => {\n            props.setOpen(false)\n            props.proceed()\n          }}\n          color=\"primary\"\n          disabled={!props.checked}>\n          Proceed\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n\nSubmissionDialog.propTypes = {\n  open: PropTypes.bool.isRequired,\n  setOpen: PropTypes.func.isRequired,\n  checked: PropTypes.bool.isRequired,\n  setChecked: PropTypes.func.isRequired,\n  proceed: PropTypes.func.isRequired\n}\n\nexport default function TopicManagement(props) {\n  const [topics, setTopics] = useState([])\n  const [customTopic, setCustomTopic] = useState(false)\n  const [loading, setLoading] = useState(true)\n  const [dialogOpen, setDialogOpen] = useState(false)\n  const [selectedTopic, setSelectedTopic] = useState(null)\n\n  const [submissionDialogOpen, setSubmissionDialogOpen] = useState(false)\n  const [proceedSubmissionChecked, setProceedSubmissionChecked] = useState(\n    false\n  )\n  const [changingSupervisionStatus, setChangingSupervisionStatus] = useState(\n    false\n  )\n\n  const { currentPhase } = useContext(PhaseContext)\n  const history = useHistory()\n\n  useEffect(() => {\n    refreshTopicList()\n  }, [])\n\n  const refreshTopicList = () => {\n    api\n      .get('/topic/me')\n      .then(res => {\n        console.log(res)\n\n        let retrievedTopics = []\n        let retrievedCustomTopic = false\n\n        res.data.topics.forEach(topic => {\n          if (topic.type === 'regular') {\n            retrievedTopics.push(topic)\n          } else if (\n            topic.type === 'studentTopic' &&\n            topic.status !== 'archived'\n          ) {\n            retrievedCustomTopic = topic\n          } else {\n            console.error('Unknown topic type')\n            console.log(topic)\n          }\n        })\n\n        setTopics(retrievedTopics)\n        setCustomTopic(retrievedCustomTopic)\n\n        // If a topic is currently selected, update it to the newly returned topic\n        if (selectedTopic) {\n          console.log('Has selected Topic')\n          let updatedSelectedTopic = res.data.topics.filter(topic => {\n            return topic._id === selectedTopic._id\n          })[0]\n          console.log('Updated selected Topic', updatedSelectedTopic)\n          setSelectedTopic(updatedSelectedTopic)\n        }\n      })\n      .catch(err => {\n        console.log(err)\n      })\n      .finally(() => {\n        setLoading(false)\n      })\n  }\n\n  const openTopicDetailsDialog = topic => {\n    console.log(topic)\n    setSelectedTopic(topic)\n    setDialogOpen(true)\n  }\n\n  const handleSuperviseStudentProjectChange = e => {\n    let body = {\n      active: e.target.checked\n    }\n\n    console.log(body)\n\n    setChangingSupervisionStatus(true)\n\n    api\n      .post('/supervisor/me/studentProjectAvailibility', body)\n      .then(res => {\n        refreshTopicList()\n      })\n      .catch(err => console.log(err))\n      .finally(() => {\n        setChangingSupervisionStatus(false)\n      })\n  }\n\n  if (loading) {\n    return <Typography>Loading ...</Typography>\n  }\n\n  return (\n    <>\n      {selectedTopic && (\n        <TopicModal\n          key={selectedTopic?._id}\n          dialogOpen={dialogOpen}\n          setDialogOpen={setDialogOpen}\n          topic={selectedTopic}\n          refresh={refreshTopicList}\n        />\n      )}\n      <Container maxWidth=\"lg\">\n        <Typography align=\"center\" variant=\"h4\">\n          Topic Management\n        </Typography>\n        <Can I=\"takeActionPhaseTwo\" this={currentPhase}>\n          <Paper elevation={2} style={{ marginTop: '20px' }}>\n            <Typography variant=\"h6\" align=\"center\">\n              Do you want to be available to supervise student defined projects?\n              (Custom Student Projects)\n            </Typography>\n            <center>\n              <FormControlLabel\n                control={\n                  <Switch\n                    disabled={changingSupervisionStatus}\n                    checked={!!customTopic}\n                    onChange={handleSuperviseStudentProjectChange}\n                  />\n                }\n                label=\"Supervise Student Defined Projects\"\n              />\n            </center>\n          </Paper>\n        </Can>\n\n        <TableContainer component={Paper} style={{ margin: '20px 0' }}>\n          <Table style={{ minWidth: '650px' }} size=\"small\">\n            <TableHead>\n              <TableRow>\n                <TableCell>Title (Edit Topic)</TableCell>\n                <TableCell align=\"center\">Type</TableCell>\n                <TableCell align=\"center\">Status</TableCell>\n                <TableCell align=\"right\">Proposals</TableCell>\n              </TableRow>\n            </TableHead>\n            <TableBody>\n              {topics.length === 0 ? (\n                <TableRow>\n                  <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    align=\"center\"\n                    colSpan={4}>\n                    <Typography>\n                      No Supervisor Defined Topics to display\n                    </Typography>\n                  </TableCell>\n                </TableRow>\n              ) : (\n                topics.map(topic => (\n                  <TableRow key={topic._id}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      <MuiLink onClick={() => openTopicDetailsDialog(topic)}>\n                        {topic.title}\n                      </MuiLink>\n                    </TableCell>\n                    <TableCell align=\"center\">Supervisor Defined</TableCell>\n                    <TableCell align=\"center\">\n                      {topicStatusToHumanFriendlyString(topic.status)}\n                    </TableCell>\n                    {currentPhase.phase === 4 ? (\n                      <TableCell align=\"right\">\n                        <Can I=\"takeActionPhaseFour\" this={currentPhase}>\n                          <Link to={`/topic/${topic._id}`}>\n                            {topic.proposalCount} Proposals\n                          </Link>\n                        </Can>\n                      </TableCell>\n                    ) : (\n                      <TableCell align=\"right\">\n                        Proposals viewable in Phase 4\n                      </TableCell>\n                    )}\n                  </TableRow>\n                ))\n              )}\n\n              {customTopic ? (\n                <>\n                  <TableRow key={customTopic._id}>\n                    <TableCell component=\"th\" scope=\"row\">\n                      <MuiLink\n                        onClick={() => openTopicDetailsDialog(customTopic)}>\n                        {customTopic.title}\n                      </MuiLink>\n                    </TableCell>\n                    <TableCell align=\"center\">Student Defined</TableCell>\n                    <TableCell align=\"center\">\n                      {topicStatusToHumanFriendlyString(customTopic.status)}\n                    </TableCell>\n                    {currentPhase.phase === 4 ? (\n                      <TableCell align=\"right\">\n                        <Can I=\"takeActionPhaseFour\" this={currentPhase}>\n                          <Link to={`/topic/${customTopic._id}`}>\n                            {customTopic.proposalCount} Proposals\n                          </Link>\n                        </Can>\n                      </TableCell>\n                    ) : (\n                      <TableCell align=\"right\">\n                        Proposals viewable in Phase 4\n                      </TableCell>\n                    )}\n                  </TableRow>\n                </>\n              ) : null}\n            </TableBody>\n          </Table>\n        </TableContainer>\n\n        <Can I=\"takeActionPhaseTwo\" this={currentPhase}>\n          <div style={{ display: 'flex', flexDirection: 'row' }}>\n            <PrimaryButton\n              type=\"button\"\n              onClick={() => history.push('/topics/add')}\n              style={{ flex: 1, flexGrow: 4 }}>\n              Add new Topic Suggestion\n            </PrimaryButton>\n          </div>\n        </Can>\n      </Container>\n    </>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport { useForm, Controller } from 'react-hook-form'\nimport {\n  Container,\n  Paper,\n  Typography,\n  Box,\n  TableContainer,\n  Table,\n  TableHead,\n  TableBody,\n  TableCell,\n  TableRow,\n  Link as MuiLink,\n  Select,\n  MenuItem,\n  FormControl\n} from '@material-ui/core'\n\nimport api from '../utils/api.axios'\nimport Tags from './Tags'\nimport PrimaryButton from './PrimaryButton'\n\nconst defaultValues = {\n  tags: [],\n  supervisor: 'unspecified',\n  topicType: 'all'\n}\n\nexport default function TopicList(props) {\n  const [topics, setTopics] = useState([])\n  const [loading, setLoading] = useState(true)\n  const [supervisors, setSupervisors] = useState([])\n\n  const { handleSubmit, errors, control } = useForm({\n    reValidateMode: 'onChange',\n    defaultValues\n  })\n\n  useEffect(() => {\n    api\n      .post('/topic/search')\n      .then(res => {\n        console.log(res)\n        if (res.data?.topics) {\n          setTopics(res.data.topics)\n        }\n      })\n      .catch(err => {\n        console.log(err)\n      })\n      .finally(() => {\n        setLoading(false)\n      })\n\n    api\n      .get('/supervisor/list')\n      .then(res => {\n        console.log(res)\n\n        setSupervisors(res.data.supervisors)\n      })\n      .catch(err => {\n        console.log(err)\n      })\n      .finally(() => {})\n  }, [])\n\n  const handleSearch = data => {\n    console.log(data)\n\n    let query = { tags: null, supervisor: null, topicType: null }\n\n    if (data.tags.length > 0) {\n      query.tags = [...data.tags]\n    }\n\n    if (data.supervisor !== 'unspecified') {\n      query.supervisor = data.supervisor\n    }\n\n    query.topicType = data.topicType\n\n    console.log('Querying DB for', query)\n\n    api\n      .post('/topic/search', query)\n      .then(res => {\n        console.log(res)\n\n        setTopics(res.data.topics)\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  }\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Typography variant=\"h3\" component=\"h1\">\n        Topic List\n      </Typography>\n\n      <form onSubmit={handleSubmit(handleSearch)}>\n        <Controller\n          control={control}\n          name=\"tags\"\n          render={({ onChange, value }) => (\n            <Tags\n              value={value}\n              onChange={vals => {\n                onChange(vals)\n              }}\n              error={!!errors?.tags}\n              helperText={errors?.tags?.message}\n            />\n          )}\n        />\n\n        <FormControl variant=\"outlined\">\n          <label>Supervisor</label>\n          <Controller\n            render={({ onChange, value }) => (\n              <Select value={value} onChange={onChange}>\n                <MenuItem value=\"unspecified\" key=\"unspecified\" selected>\n                  None\n                </MenuItem>\n                {supervisors.map(supervisor => (\n                  <MenuItem value={supervisor._id} key={supervisor._id}>\n                    {supervisor.displayName}\n                  </MenuItem>\n                ))}\n              </Select>\n            )}\n            name=\"supervisor\"\n            control={control}\n          />\n        </FormControl>\n\n        <FormControl variant=\"outlined\">\n          <label>Topic Type</label>\n          <Controller\n            render={({ onChange, value }) => (\n              <Select value={value} onChange={onChange}>\n                <MenuItem value=\"all\" key=\"all\" selected>\n                  All\n                </MenuItem>\n                <MenuItem value=\"regular\" key=\"regular\">\n                  Supervisor Defined\n                </MenuItem>\n                <MenuItem value=\"studentTopic\" key=\"studentTopic\">\n                  Student Defined\n                </MenuItem>\n              </Select>\n            )}\n            name=\"topicType\"\n            control={control}\n          />\n        </FormControl>\n\n        <PrimaryButton>Search</PrimaryButton>\n      </form>\n\n      <TableContainer component={Paper} style={{ margin: '20px 0' }}>\n        <Table style={{ minWidth: '650px' }} size=\"medium\">\n          <TableHead>\n            <TableRow>\n              <TableCell colSpan={5}>\n                {`Found ${topics.length} matching topics`}\n              </TableCell>\n            </TableRow>\n          </TableHead>\n\n          <TableBody>\n            {topics.length === 0 ? (\n              <TableRow>\n                <TableCell\n                  component=\"th\"\n                  scope=\"row\"\n                  align=\"center\"\n                  colSpan={3}>\n                  <Typography>\n                    {loading ? 'Loading Topics ...' : 'No Topics to display'}\n                  </Typography>\n                </TableCell>\n              </TableRow>\n            ) : (\n              topics.map(topic => (\n                <TableRow key={topic.id}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    <Link to={'./topics/view/' + topic._id}>\n                      <MuiLink component=\"p\">{topic.title}</MuiLink>\n                    </Link>\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {topic.supervisor.displayName}\n                  </TableCell>\n                  <TableCell>\n                    <div\n                      style={{\n                        display: 'flex',\n                        flexDirection: 'row',\n                        alignContent: 'center',\n                        justifyContent: 'right'\n                      }}>\n                      {topic.tags.slice(0, 3).map(tag => (\n                        <Box\n                          key={tag}\n                          style={{\n                            backgroundColor: '#dbdbdb',\n                            color: '#5b5b5b',\n                            margin: '0 3px',\n                            padding: '4px',\n                            borderRadius: '3px'\n                          }}>\n                          {tag}\n                        </Box>\n                      ))}\n                      {topic.tags.length > 3 ? (\n                        <Box\n                          key={'additional_tags'}\n                          style={{\n                            backgroundColor: '#dbdbdb',\n                            color: '#5b5b5b',\n                            margin: '0 3px',\n                            padding: '4px',\n                            borderRadius: '3px'\n                          }}>\n                          {'+ ' + (topic.tags.length - 3) + ' more'}\n                        </Box>\n                      ) : null}\n                    </div>\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {topic.proposalCount}{' '}\n                    {topic.proposalCount < 2\n                      ? 'Student has '\n                      : 'Students have '}\n                    shown interest\n                  </TableCell>\n                </TableRow>\n              ))\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Container>\n  )\n}\n","import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\n\nimport Alert from '@material-ui/lab/Alert'\nimport { Collapse, IconButton } from '@material-ui/core'\nimport CloseIcon from '@material-ui/icons/Close'\n\nconst CollapsableAlert = props => {\n  // useEffect(() => {\n  //   console.log('Open changed')\n  //   setTimeout(() => {\n  //     props.setOpen(false)\n  //     clearTimeout()\n  //   }, props.interval || 2000)\n  // }, [props.open])\n\n  return (\n    <Collapse in={props.open}>\n      <Alert\n        severity={props.severity}\n        action={\n          <IconButton\n            aria-label=\"close\"\n            color=\"inherit\"\n            size=\"small\"\n            onClick={() => {\n              props.setOpen(false)\n            }}>\n            <CloseIcon fontSize=\"inherit\" />\n          </IconButton>\n        }>\n        {props.message}\n      </Alert>\n    </Collapse>\n  )\n}\n\nCollapsableAlert.defaultProps = {\n  message: 'No Message Supplied',\n  severity: 'info'\n}\n\nCollapsableAlert.propTypes = {\n  open: PropTypes.bool.isRequired,\n  setOpen: PropTypes.func.isRequired,\n  message: PropTypes.string.isRequired,\n  severity: PropTypes.string.isRequired,\n  interval: PropTypes.number\n}\n\nexport default CollapsableAlert\n","import React, { useState, useContext } from 'react'\nimport api from '../utils/api.axios'\nimport { useForm, Controller } from 'react-hook-form'\nimport { yupResolver } from '@hookform/resolvers/yup'\nimport { useHistory } from 'react-router-dom'\n\nimport { AuthContext } from '../contexts/AuthContext'\n\nimport { Container, Typography } from '@material-ui/core'\n\nimport { formSchema, defaultValues } from '../utils/yupSchemas/yupTopicSchema'\n\nimport CollapsableAlert from './CollapsableAlert'\nimport PrimaryButton from './PrimaryButton'\nimport Input from './Input'\nimport MultiLineInput from './MultiLineInput'\nimport Tags from './Tags'\nimport TargetCoursesInput from './TargetCoursesInput'\n\nconst AddTopicForm = props => {\n  const [alert, setAlert] = useState({\n    message: 'No Message Supplied',\n    severity: 'info'\n  })\n  const [alertOpen, setAlertOpen] = useState(false)\n  const [submitting, setSubmitting] = useState(false)\n\n  const history = useHistory()\n  const { register, handleSubmit, errors, control } = useForm({\n    resolver: yupResolver(formSchema),\n    reValidateMode: 'onChange',\n    defaultValues\n  })\n\n  const { user } = useContext(AuthContext)\n\n  const onSubmit = data => {\n    console.log(data)\n\n    data.ownerType = user.role.toLowerCase()\n\n    setSubmitting(true)\n    api\n      .post('/topic/add', data)\n      .then(resp => {\n        console.log(resp)\n        history.push('/topics/manage')\n      })\n      .catch(err => {\n        console.log(err)\n        setAlert({ message: 'Could not add topic', severity: 'error' })\n      })\n      .finally(() => {\n        setSubmitting(false)\n      })\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"md\">\n      <Typography component=\"h1\" variant=\"h4\" align=\"center\">\n        Create new Topic\n      </Typography>\n      <form onSubmit={handleSubmit(onSubmit)} autoComplete=\"off\">\n        <Input\n          inputRef={register}\n          type=\"text\"\n          name=\"title\"\n          label=\"Title\"\n          error={!!errors.title}\n          helperText={errors?.title?.message}\n        />\n        <MultiLineInput\n          inputRef={register}\n          type=\"text\"\n          name=\"description\"\n          label=\"Description\"\n          error={!!errors.description}\n          helperText={errors?.description?.message}\n        />\n\n        <Controller\n          control={control}\n          name=\"tags\"\n          render={({ onChange, value }) => (\n            <Tags\n              value={value}\n              onChange={vals => {\n                onChange(vals)\n              }}\n              error={!!errors?.tags}\n              helperText={errors?.tags?.message}\n            />\n          )}\n        />\n\n        <MultiLineInput\n          inputRef={register}\n          type=\"text\"\n          name=\"additionalNotes\"\n          label=\"Additional Notes (Optional)\"\n          error={!!errors.additionalNotes}\n          helperText={errors?.additionalNotes?.message}\n        />\n\n        <TargetCoursesInput\n          control={control}\n          label=\"Target Courses (Optional)\"\n          error={!!errors.targetCourses}\n          helperText={errors?.targetCourses?.message}\n        />\n\n        <PrimaryButton loading={submitting}>Add Topic</PrimaryButton>\n\n        <br />\n        <CollapsableAlert\n          open={alertOpen}\n          message={alert.message}\n          severity={alert.severity}\n        />\n      </form>\n    </Container>\n  )\n}\n\nexport default AddTopicForm\n","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { makeStyles } from '@material-ui/core/styles'\n\n/**\n * Note :\n * If you're using react v 15.4 or less\n * You can directly import PropTypes from react instead.\n * Refer to this : https://reactjs.org/warnings/dont-call-proptypes.html\n */\n\nconst useStyles = makeStyles(theme => ({\n  countdown: {\n    margin: '10px auto',\n    paddingBottom: '20px',\n    textAlign: 'center'\n  },\n\n  countdownCol: {\n    display: 'inline-block'\n  },\n\n  countdownColElement: {\n    margin: '0 20px',\n    display: 'flex',\n    flexDirection: 'column',\n    '& strong': {\n      fontSize: '50px'\n    }\n  }\n}))\n\nconst Countdown = props => {\n  const [timeLeft, setTimeLeft] = useState({\n    days: ' - ',\n    hours: ' - ',\n    min: ' - ',\n    sec: ' - '\n  })\n  const [interval, updateInterval] = useState()\n\n  const classes = useStyles()\n\n  useEffect(() => {\n    // update every second\n    updateInterval(\n      setInterval(() => {\n        const date = calculateCountdown(props.date)\n        date ? setTimeLeft(date) : stop()\n      }, 1000)\n    )\n  }, [])\n\n  const calculateCountdown = endDate => {\n    let diff = (Date.parse(new Date(endDate)) - Date.parse(new Date())) / 1000\n\n    // clear countdown when date is reached\n    if (diff <= 0) return false\n\n    const timeLeft = {\n      years: 0,\n      days: 0,\n      hours: 0,\n      min: 0,\n      sec: 0\n    }\n\n    // calculate time difference between now and expected date\n    if (diff >= 365.25 * 86400) {\n      // 365.25 * 24 * 60 * 60\n      timeLeft.years = Math.floor(diff / (365.25 * 86400))\n      diff -= timeLeft.years * 365.25 * 86400\n    }\n    if (diff >= 86400) {\n      // 24 * 60 * 60\n      timeLeft.days = Math.floor(diff / 86400)\n      diff -= timeLeft.days * 86400\n    }\n    if (diff >= 3600) {\n      // 60 * 60\n      timeLeft.hours = Math.floor(diff / 3600)\n      diff -= timeLeft.hours * 3600\n    }\n    if (diff >= 60) {\n      timeLeft.min = Math.floor(diff / 60)\n      diff -= timeLeft.min * 60\n    }\n    timeLeft.sec = diff\n\n    return timeLeft\n  }\n\n  const stop = () => {\n    clearInterval(interval)\n  }\n\n  const addLeadingZeros = value => {\n    value = String(value)\n    while (value.length < 2) {\n      value = '0' + value\n    }\n    return value\n  }\n\n  return (\n    <div className={classes.countdown}>\n      <span className={classes.countdownCol}>\n        <span className={classes.countdownColElement}>\n          <strong>{addLeadingZeros(timeLeft.days)}</strong>\n          <span>{timeLeft.days === 1 ? 'Day' : 'Days'}</span>\n        </span>\n      </span>\n\n      <span className={classes.countdownCol}>\n        <span className={classes.countdownColElement}>\n          <strong>{addLeadingZeros(timeLeft.hours)}</strong>\n          <span>Hours</span>\n        </span>\n      </span>\n\n      <span className={classes.countdownCol}>\n        <span className={classes.countdownColElement}>\n          <strong>{addLeadingZeros(timeLeft.min)}</strong>\n          <span>Min</span>\n        </span>\n      </span>\n\n      <span className={classes.countdownCol}>\n        <span className={classes.countdownColElement}>\n          <strong>{addLeadingZeros(timeLeft.sec)}</strong>\n          <span>Sec</span>\n        </span>\n      </span>\n    </div>\n  )\n}\n\nCountdown.propTypes = {\n  date: PropTypes.string.isRequired\n}\n\nCountdown.defaultProps = {\n  date: new Date()\n}\n\nexport default Countdown\n","import React, { useContext } from 'react'\nimport { PhaseContext } from '../contexts/PhaseContext'\nimport { AuthContext } from '../contexts/AuthContext'\nimport { Can } from '../Auth/Can'\n\nimport CountdownToDate from './CountdownToDate'\nimport { Typography, Container } from '@material-ui/core'\n\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n  phaseBreakdownTitle: {\n    fontSize: '32px'\n  },\n  phaseTitle: {\n    fontSize: '25px'\n  }\n}))\n\nfunction Welcome() {\n  const { currentPhase } = useContext(PhaseContext)\n  const { user } = useContext(AuthContext)\n  const classes = useStyles()\n\n  console.log(currentPhase)\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Typography align=\"center\" variant=\"h3\" style={{ margin: '40px' }}>\n        Final Year Project Management System\n      </Typography>\n      <Typography style={{ margin: '20px' }} align=\"center\">\n        Welcome to the FYP Management system.\n      </Typography>\n      <Typography varint=\"paragraph\"></Typography>\n      <Typography style={{ fontSize: '40px' }} align=\"center\">\n        Current Phase{' '}\n        <span style={{ fontWeight: 'bold' }}>{currentPhase.phase}</span>\n      </Typography>\n      {currentPhase.phase > 0 && currentPhase.phase < 4 ? (\n        <>\n          <CountdownToDate date={currentPhase.endDate.toString()} />\n          <Typography style={{ fontSize: '35px' }} align=\"center\">\n            until next phase\n          </Typography>\n        </>\n      ) : null}\n    </Container>\n  )\n}\n\nexport default Welcome\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport PrimaryButton from '../../PrimaryButton'\n\nexport default function UploadButton(props) {\n  return (\n    <PrimaryButton\n      disabled={props.disabled}\n      loading={props.loading}\n      onClick={props.onUpload}>\n      Upload All\n    </PrimaryButton>\n  )\n}\n\nUploadButton.propTypes = {\n  loading: PropTypes.bool.isRequired,\n  disabled: PropTypes.bool.isRequired,\n  onUpload: PropTypes.func.isRequired\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { CSVReader } from 'react-papaparse'\nimport * as yup from 'yup'\n\nimport Button from '@material-ui/core/Button'\n\nconst buttonRef = React.createRef()\n\nconst papaParseConfig = {\n  header: true\n}\n\nexport default function CSVUploader(props) {\n  const handleOpenDialog = e => {\n    // Note that the ref is set async, so it might be null at some point\n    if (buttonRef.current) {\n      buttonRef.current.open(e)\n    }\n  }\n\n  const handleOnFileLoaded = data => {\n    console.log(data)\n\n    let studentsArray = []\n    for (let entry of data) {\n      let email = entry.data.email\n      // Skip any entries which are null or empty\n      if (!email || email === '') {\n        console.log(email, 'is being skipped')\n        continue\n      }\n\n      console.log(email)\n      studentsArray.push(email)\n    }\n\n    props.onAdd(studentsArray)\n  }\n\n  const handleOnError = (err, file, inputElem, reason) => {\n    console.log('---------------------------')\n    console.log(err)\n    console.log('---------------------------')\n  }\n\n  const handleOnRemoveFile = data => {\n    console.log('---------------------------')\n    console.log(data)\n    console.log('---------------------------')\n  }\n\n  const handleRemoveFile = e => {\n    // Note that the ref is set async, so it might be null at some point\n    if (buttonRef.current) {\n      buttonRef.current.removeFile(e)\n    }\n  }\n\n  return (\n    <>\n      <CSVReader\n        config={papaParseConfig}\n        ref={buttonRef}\n        onFileLoad={handleOnFileLoaded}\n        onError={handleOnError}\n        noClick\n        noDrag\n        noProgressBar\n        onRemoveFile={handleOnRemoveFile}>\n        {({ file }) => (\n          <aside\n            style={{\n              display: 'flex',\n              flexDirection: 'row',\n              marginBottom: 10\n            }}>\n            <Button\n              onClick={handleOpenDialog}\n              variant=\"contained\"\n              color=\"primary\"\n              style={{\n                borderRadius: 0,\n                marginTop: 5,\n                marginLeft: 0,\n                marginRight: 0,\n                width: '40%',\n                height: 50,\n                paddingLeft: 0,\n                paddingRight: 0\n              }}>\n              Browse file\n            </Button>\n            <div\n              style={{\n                borderWidth: 1,\n                borderStyle: 'solid',\n                borderColor: '#ccc',\n                height: 45,\n                lineHeight: 2.5,\n                marginTop: 5,\n                marginBottom: 5,\n                paddingLeft: 13,\n                paddingTop: 3,\n                width: '60%'\n              }}>\n              {file && file.name}\n            </div>\n            <Button\n              variant=\"contained\"\n              onClick={handleRemoveFile}\n              style={{\n                borderRadius: 0,\n                marginTop: 5,\n                marginLeft: 0,\n                marginRight: 0,\n                width: '10%',\n                height: 50,\n                paddingLeft: 0,\n                paddingRight: 0\n              }}>\n              Remove\n            </Button>\n          </aside>\n        )}\n      </CSVReader>\n    </>\n  )\n}\n\nCSVUploader.propTypes = {\n  onAdd: PropTypes.func.isRequired\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  Paper,\n  InputBase,\n  Tooltip,\n  Divider,\n  IconButton,\n  Checkbox\n} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\nimport { AddCircle as AddCircleIcon } from '@material-ui/icons'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    padding: '2px 0px',\n    display: 'flex',\n    alignItems: 'center',\n    width: '100%'\n  },\n  input: {\n    marginLeft: theme.spacing(1),\n    flex: 1\n  },\n  iconButton: {\n    padding: 10\n  },\n  divider: {\n    height: 28,\n    margin: 4\n  }\n}))\n\nexport default function UserEmailInputField(props) {\n  const classes = useStyles()\n\n  return (\n    <Paper component=\"form\" className={classes.root}>\n      <InputBase\n        className={classes.input}\n        placeholder=\"Student Email\"\n        value={props.email}\n        inputProps={{ 'aria-label': 'Student Email' }}\n        endAdornment={props.endAdornment}\n        onChange={props.onChange}\n      />\n      <Tooltip\n        title=\"Include @studentmail prefix\"\n        aria-label=\"Include @studentmail prefix\">\n        <Checkbox\n          edge=\"start\"\n          disableRipple\n          checked={props.includeEmailPrefix}\n          onChange={props.onChangeEmailPrefix}\n        />\n      </Tooltip>\n      <Divider className={classes.divider} orientation=\"vertical\" />\n      <IconButton\n        className={classes.iconButton}\n        aria-label=\"search\"\n        onClick={props.onAdd}>\n        <AddCircleIcon />\n      </IconButton>\n    </Paper>\n  )\n}\n\nUserEmailInputField.propTypes = {\n  email: PropTypes.string.isRequired,\n  endAdornment: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  includeEmailPrefix: PropTypes.bool.isRequired,\n  onChangeEmailPrefix: PropTypes.func.isRequired,\n  onAdd: PropTypes.func.isRequired\n}\n","import React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\n\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft'\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight'\n\nimport {\n  TableContainer,\n  Table,\n  TableHead,\n  TableBody,\n  TableFooter,\n  TablePagination,\n  TableCell,\n  TableRow,\n  Tooltip,\n  Paper,\n  IconButton,\n  Button\n} from '@material-ui/core'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5)\n  },\n  assigned: {\n    color: 'green'\n  },\n  not_found: {\n    color: 'red'\n  },\n  exists: {\n    color: 'orange'\n  },\n  no_assignment: {\n    color: 'red'\n  }\n}))\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles()\n  const { count, page, rowsPerPage, onChangePage } = props\n\n  const handleBackButtonClick = event => {\n    onChangePage(event, page - 1)\n  }\n\n  const handleNextButtonClick = event => {\n    onChangePage(event, page + 1)\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\">\n        <KeyboardArrowLeft />\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\">\n        <KeyboardArrowRight />\n      </IconButton>\n    </div>\n  )\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired\n}\n\nconst userTooltipTitles = {\n  exists: 'Exists: This user is already assigned this role',\n  not_found: 'Not Found: Email could not be linked to an active user account',\n  assigned: 'The role was sucessfully assigned to this user'\n}\n\nconst PaginatedTable = props => {\n  const [visable, setVisable] = useState(props.value)\n  const [page, setPage] = useState(0)\n  const [rowsPerPage, setRowsPerPage] = useState(5)\n\n  useEffect(() => {\n    setVisable(props.value)\n  }, [props.value])\n\n  const classes = useStyles()\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage)\n  }\n\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10))\n    setPage(0)\n  }\n\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Email</TableCell>\n            {props.removableEntries ? (\n              <TableCell align=\"right\">Actions</TableCell>\n            ) : null}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {visable.length === 0 ? (\n            <TableRow>\n              <TableCell colspan={props.removableEntries ? 2 : 1}>\n                No Users to display\n              </TableCell>\n            </TableRow>\n          ) : (\n            (rowsPerPage > 0\n              ? visable.slice(\n                  page * rowsPerPage,\n                  page * rowsPerPage + rowsPerPage\n                )\n              : visable\n            ).map(user => (\n              <TableRow key={user.id}>\n                <Tooltip\n                  title={\n                    user?.status ? userTooltipTitles[user.status] : user.email\n                  }>\n                  <TableCell\n                    className={user?.status ? classes[user.status] : ''}>\n                    {user.email}\n                  </TableCell>\n                </Tooltip>\n                {props.removableEntries ? (\n                  <TableCell align=\"right\">\n                    <Button\n                      variant=\"outlined\"\n                      color=\"secondary\"\n                      startIcon={<DeleteIcon />}\n                      onClick={() => props.removeEntry(user.email)}>\n                      Remove\n                    </Button>\n                  </TableCell>\n                ) : null}\n              </TableRow>\n            ))\n          )}\n        </TableBody>\n        <TableFooter>\n          <TableRow>\n            <TablePagination\n              rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\n              colSpan={3}\n              count={visable.length}\n              rowsPerPage={rowsPerPage}\n              page={page}\n              SelectProps={{\n                inputProps: { 'aria-label': 'rows per page' },\n                native: true\n              }}\n              onChangePage={handleChangePage}\n              onChangeRowsPerPage={handleChangeRowsPerPage}\n              ActionsComponent={TablePaginationActions}\n            />\n          </TableRow>\n        </TableFooter>\n      </Table>\n    </TableContainer>\n  )\n}\n\nPaginatedTable.propTypes = {\n  value: PropTypes.array.isRequired,\n  removableEntries: PropTypes.bool,\n  removeEntry: PropTypes.func\n}\n\nexport default PaginatedTable\n","import React from 'react'\nimport { useHistory } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport { makeStyles } from '@material-ui/core/styles'\nimport Button from '@material-ui/core/Button'\nimport IconButton from '@material-ui/core/IconButton'\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos'\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1)\n  }\n}))\n\nconst BackButton = props => {\n  const classes = useStyles()\n  const history = useHistory()\n  return props.dense ? (\n    <IconButton\n      className={classes.button}\n      onClick={() => {\n        history.goBack()\n      }}\n      {...props}>\n      <ArrowBackIosIcon />\n    </IconButton>\n  ) : (\n    <Button\n      variant=\"contained\"\n      color=\"primary\"\n      className={classes.button}\n      startIcon={<ArrowBackIcon />}\n      onClick={() => history.goBack()}\n      {...props}>\n      Go Back\n    </Button>\n  )\n}\n\nBackButton.defaultProps = {\n  dense: false\n}\n\nBackButton.propTypes = {\n  dense: PropTypes.bool\n}\n\nexport default BackButton\n","import React, { useState } from 'react'\nimport api from '../../../utils/api.axios'\n\nimport { Typography, Container, Divider } from '@material-ui/core'\n\nimport PrimaryButton from '../../PrimaryButton'\nimport UploadButton from './UploadButton'\nimport CSVUploader from '../../CSVUploader'\nimport UserEmailInputField from './UserEmailInputField'\nimport PaginatedTable from '../../PaginatedTable'\nimport BackButton from '../../Buttons/BackButton'\n\nimport CollapsableAlert from '../../CollapsableAlert'\n\nconst StudentAssignment = props => {\n  const [currentEmail, setCurrentEmail] = useState('')\n  const [students, setStudents] = useState([])\n  const [includeEmailPrefix, setIncludeEmailPrefix] = useState(true)\n  const [alert, setAlert] = useState({})\n  const [alertOpen, setAlertOpen] = useState(false)\n  const [uploading, setUploading] = useState(false)\n\n  const onChange = e => {\n    setCurrentEmail(e.target.value)\n  }\n\n  const onAdd = e => {\n    if (currentEmail.length === 0) {\n      setAlert({ message: 'Cannot add empty email!', severity: 'warning' })\n      setAlertOpen(true)\n      return\n    }\n\n    if (students.filter(student => student.email === currentEmail).length > 0) {\n      setAlert({ message: 'Cannot add duplicate email!', severity: 'warning' })\n      setAlertOpen(true)\n      return\n    }\n\n    // Only apply a email prefix if the checkbox is checked and there is no existing prefix already\n    let prefix =\n      currentEmail.indexOf('@') === -1 && includeEmailPrefix\n        ? '@studentmail.ul.ie'\n        : ''\n    let email = currentEmail.trim() + prefix\n\n    let re = /\\S+@\\S+\\.\\S+/\n    if (!re.test(email)) {\n      setAlert({ message: 'Cannot add invalid email!', severity: 'warning' })\n      setAlertOpen(true)\n      return\n    }\n\n    let studentsList = [...students]\n    studentsList.push({ email: email })\n    setCurrentEmail('')\n    setStudents(studentsList)\n  }\n\n  const onAddBulk = bulkStudents => {\n    let studentsList = [...students]\n    console.log('studentsList', studentsList)\n    console.log('bulkStudents', bulkStudents)\n    for (let student of bulkStudents) {\n      // Skip any empty rows or strings\n      if (!student || student.length === 0) {\n        console.log('Skipping', student)\n        return\n      }\n      studentsList.push({\n        id: studentsList.length,\n        email: student\n      })\n    }\n    setStudents(studentsList)\n  }\n\n  const onUpload = async e => {\n    if (students.length === 0) {\n      return console.log('Please enter some student emails before uploading')\n    }\n\n    let body = {\n      students: students\n    }\n\n    console.log('Uploading: ', body)\n\n    setUploading(true)\n    api\n      .post('/student/assign', body)\n      .then(res => {\n        console.log(res.data)\n        if (res.data.students.length > 0) {\n          let studentsMap = [...students]\n          let emailsMap = students.map(student => student.email)\n\n          for (let student of res.data.students) {\n            let index = emailsMap.indexOf(student.email)\n\n            if (index < 0) {\n              // Couldn't find student email address returned from api\n              continue\n            }\n\n            studentsMap[index].status = student.status\n          }\n\n          let remainingStudents = studentsMap.filter(\n            student =>\n              !['assigned', 'exists', undefined].includes(student?.status)\n          )\n          console.log(remainingStudents)\n          if (remainingStudents.length > 0) {\n            setAlert({\n              message:\n                'Could not add the following student emails (Hover email for more details)',\n              severity: 'error'\n            })\n          } else {\n            setAlert({\n              message: 'All students were sucessfully added',\n              severity: 'success'\n            })\n          }\n          setAlertOpen(true)\n          return setStudents(remainingStudents)\n        }\n        setStudents([])\n        setAlert({\n          message: 'All students were sucessfully added',\n          severity: 'success'\n        })\n\n        setAlertOpen(true)\n      })\n      .catch(err => {\n        console.log(err)\n      })\n      .finally(() => {\n        setUploading(false)\n      })\n  }\n\n  const onChangeEmailPrefix = e => {\n    setIncludeEmailPrefix(e.target.checked)\n  }\n\n  const handleRemove = studentEmail => {\n    let filteredStudents = students.filter(s => s.email !== studentEmail)\n    setStudents(filteredStudents)\n  }\n\n  const endAdornment = includeEmailPrefix ? (\n    <span style={{ fontSize: '10px', color: 'gray', marginRight: 10 }}>\n      @studentmail.ul.ie\n    </span>\n  ) : (\n    ''\n  )\n\n  return (\n    <Container maxWidth=\"lg\">\n      <BackButton />\n      <Typography variant=\"h6\">Upload CSV file</Typography>\n      <CSVUploader onAdd={onAddBulk} />\n\n      <br />\n      <Divider />\n      <br />\n\n      <Typography variant=\"h6\">Add Individual Student</Typography>\n      <UserEmailInputField\n        email={currentEmail}\n        endAdornment={endAdornment}\n        onChange={onChange}\n        includeEmailPrefix={includeEmailPrefix}\n        onChangeEmailPrefix={onChangeEmailPrefix}\n        onAdd={onAdd}\n      />\n\n      <br />\n\n      <CollapsableAlert\n        open={alertOpen}\n        setOpen={setAlertOpen}\n        message={alert.message}\n        severity={alert.severity}\n      />\n\n      <br />\n\n      <PaginatedTable\n        value={students}\n        removableEntries\n        removeEntry={handleRemove}\n      />\n\n      <UploadButton\n        disabled={!students.length}\n        loading={uploading}\n        onUpload={onUpload}\n      />\n      <PrimaryButton\n        type=\"button\"\n        color=\"secondary\"\n        onClick={() => {\n          setStudents([])\n          setAlertOpen(false)\n        }}>\n        Clear Student List\n      </PrimaryButton>\n    </Container>\n  )\n}\n\nexport default StudentAssignment\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { IconButton } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport KeyboardArrowLeft from '@material-ui/icons/KeyboardArrowLeft'\nimport KeyboardArrowRight from '@material-ui/icons/KeyboardArrowRight'\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexShrink: 0,\n    marginLeft: theme.spacing(2.5)\n  }\n}))\n\nfunction TablePaginationActions(props) {\n  const classes = useStyles()\n  const { count, page, rowsPerPage, onChangePage } = props\n\n  const handleBackButtonClick = event => {\n    onChangePage(event, page - 1)\n  }\n\n  const handleNextButtonClick = event => {\n    onChangePage(event, page + 1)\n  }\n\n  return (\n    <div className={classes.root}>\n      <IconButton\n        onClick={handleBackButtonClick}\n        disabled={page === 0}\n        aria-label=\"previous page\">\n        <KeyboardArrowLeft />\n      </IconButton>\n      <IconButton\n        onClick={handleNextButtonClick}\n        disabled={page >= Math.ceil(count / rowsPerPage) - 1}\n        aria-label=\"next page\">\n        <KeyboardArrowRight />\n      </IconButton>\n    </div>\n  )\n}\n\nTablePaginationActions.propTypes = {\n  count: PropTypes.number.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  page: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired\n}\n\nexport default TablePaginationActions\n","import React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {\r\n  Paper,\r\n  TableContainer,\r\n  Table,\r\n  TableHead,\r\n  TableBody,\r\n  TableFooter,\r\n  TableRow,\r\n  TableCell,\r\n  TablePagination\r\n} from '@material-ui/core'\r\nimport { Delete } from '@material-ui/icons'\r\n\r\nimport PrimaryButton from '../PrimaryButton'\r\nimport TablePaginationActions from '../Table/TablePaginationActions'\r\n\r\nconst UserTable = ({ values, remove, removing, ...props }) => {\r\n  const [page, setPage] = useState(0)\r\n  const [rowsPerPage, setRowsPerPage] = useState(5)\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage)\r\n  }\r\n\r\n  const handleChangeRowsPerPage = event => {\r\n    setRowsPerPage(parseInt(event.target.value, 10))\r\n    setPage(0)\r\n  }\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table aria-label=\"simple table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Email</TableCell>\r\n            <TableCell align=\"right\">Actions</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {values.length === 0 ? (\r\n            <TableRow>\r\n              <TableCell colSpan={3} align=\"center\">\r\n                No Students to show\r\n              </TableCell>\r\n            </TableRow>\r\n          ) : (\r\n            (rowsPerPage > 0\r\n              ? values.slice(\r\n                  page * rowsPerPage,\r\n                  page * rowsPerPage + rowsPerPage\r\n                )\r\n              : values\r\n            ).map(user => (\r\n              <TableRow key={user.id}>\r\n                <TableCell>{user.email}</TableCell>\r\n                <TableCell align=\"right\">\r\n                  <PrimaryButton\r\n                    onClick={() => remove(user._id)}\r\n                    style={{ width: '25%', margin: '0 0 0 5px' }}\r\n                    color=\"secondary\"\r\n                    startIcon={<Delete />}\r\n                    loading={removing === user._id}>\r\n                    Delete\r\n                  </PrimaryButton>\r\n                </TableCell>\r\n              </TableRow>\r\n            ))\r\n          )}\r\n        </TableBody>\r\n        <TableFooter>\r\n          <TableRow>\r\n            <TablePagination\r\n              rowsPerPageOptions={[5, 10, 25, { label: 'All', value: -1 }]}\r\n              colSpan={3}\r\n              count={values.length}\r\n              rowsPerPage={rowsPerPage}\r\n              page={page}\r\n              SelectProps={{\r\n                inputProps: { 'aria-label': 'rows per page' },\r\n                native: true\r\n              }}\r\n              onChangePage={handleChangePage}\r\n              onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              ActionsComponent={TablePaginationActions}\r\n            />\r\n          </TableRow>\r\n        </TableFooter>\r\n      </Table>\r\n    </TableContainer>\r\n  )\r\n}\r\n\r\nUserTable.propTypes = {\r\n  values: PropTypes.array.isRequired,\r\n  remove: PropTypes.func.isRequired,\r\n  removing: PropTypes.string\r\n}\r\n\r\nexport default UserTable\r\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { Container, Typography } from '@material-ui/core'\n\nimport api from '../../utils/api.axios'\nimport Input from '../Input'\nimport PrimaryButton from '../PrimaryButton'\nimport CollapsableAlert from '../CollapsableAlert'\n\nimport UserTable from './UserTable'\n\nconst StudentManagement = props => {\n  const [students, setStudents] = useState([])\n  const [visableStudents, setVisableStudents] = useState([])\n\n  const [loading, setLoading] = useState(true)\n  const [removing, setRemoving] = useState('')\n  const [alert, setAlert] = useState({})\n  const [alertOpen, setAlertOpen] = useState(false)\n\n  useEffect(() => {\n    refreshStudentList()\n  }, [])\n\n  const refreshStudentList = () => {\n    // Get students from DB\n    api\n      .get('/student')\n      .then(res => {\n        console.log(res)\n        setStudents(res.data.students)\n        setVisableStudents(res.data.students)\n      })\n      .catch(err => {\n        switch (err) {\n          case 'error_retrieving_students':\n            setAlert({\n              message: 'Could not retrieve students from database',\n              severity: 'warning'\n            })\n            break\n          default:\n            setAlert({\n              message: 'An error occurred, please try again',\n              severity: 'error'\n            })\n        }\n        setAlertOpen(true)\n      })\n      .finally(() => {\n        setLoading(false)\n      })\n  }\n\n  const handleSearch = e => {\n    if (e.target.value === '') {\n      return setVisableStudents(students)\n    }\n    let searched = students.filter(\n      student => !student.email.indexOf(e.target.value.trim())\n    )\n    setVisableStudents(searched)\n  }\n\n  const handleRemove = id => {\n    console.log('removing student w/ id', id)\n\n    setRemoving(id)\n    api\n      .post('/student/delete', { studentId: id })\n      .then(res => {\n        console.log(res)\n        setAlert({\n          message: 'Student sucessfully removed',\n          severity: 'success'\n        })\n        setAlertOpen(true)\n        refreshStudentList()\n      })\n      .catch(err => {\n        console.log(err)\n        switch (err) {\n          case 'error_retrieving_student':\n            setAlert({\n              message:\n                'An error occurred while retrieving the student. Please try again',\n              severity: 'warning'\n            })\n            break\n          case 'student_not_found':\n            setAlert({\n              message: 'Could not find the requested student',\n              severity: 'warning'\n            })\n            refreshStudentList()\n            break\n          default:\n            setAlert({\n              message: 'An error occurred, please try again',\n              severity: 'error'\n            })\n        }\n\n        setAlertOpen(true)\n      })\n      .finally(() => {\n        setRemoving(null)\n      })\n  }\n\n  if (loading) {\n    return <p>Loading...</p>\n  }\n\n  return (\n    <Container maxwidth=\"md\">\n      <Typography variant=\"h4\" align=\"center\">\n        Student Management\n      </Typography>\n      <Input label=\"Search\" onChange={handleSearch} />\n\n      <UserTable\n        values={visableStudents}\n        remove={handleRemove}\n        removing={removing}\n      />\n\n      <CollapsableAlert\n        open={alertOpen}\n        setOpen={setAlertOpen}\n        message={alert.message}\n        severity={alert.severity}\n      />\n\n      <Link to=\"/student/assign\">\n        <PrimaryButton>Assign Students</PrimaryButton>\n      </Link>\n    </Container>\n  )\n}\n\nexport default StudentManagement\n","import React, { useState } from 'react'\nimport api from '../../../utils/api.axios'\n\nimport { Typography, Container, Divider } from '@material-ui/core'\n\nimport PrimaryButton from '../../PrimaryButton'\nimport UploadButton from './UploadButton'\nimport CSVUploader from '../../CSVUploader'\nimport UserEmailInputField from './UserEmailInputField'\nimport PaginatedTable from '../../PaginatedTable'\nimport BackButton from '../../Buttons/BackButton'\n\nimport CollapsableAlert from '../../CollapsableAlert'\n\nconst SupervisorAssignment = props => {\n  const [currentEmail, setCurrentEmail] = useState('')\n  const [supervisors, setSupervisors] = useState([])\n  const [includeEmailPrefix, setIncludeEmailPrefix] = useState(true)\n  const [alert, setAlert] = useState({})\n  const [alertOpen, setAlertOpen] = useState(false)\n  const [uploading, setUploading] = useState(false)\n\n  const onChange = e => {\n    setCurrentEmail(e.target.value)\n  }\n\n  const onAdd = e => {\n    if (currentEmail.length === 0) {\n      setAlert({ message: 'Cannot add empty email!', severity: 'warning' })\n      setAlertOpen(true)\n      return\n    }\n\n    if (\n      supervisors.filter(supervisor => supervisor.email === currentEmail)\n        .length > 0\n    ) {\n      setAlert({ message: 'Cannot add duplicate email!', severity: 'warning' })\n      setAlertOpen(true)\n      return\n    }\n\n    // Only apply a email prefix if the checkbox is checked and there is no existing prefix already\n    let prefix =\n      currentEmail.indexOf('@') === -1 && includeEmailPrefix ? '@ul.ie' : ''\n    let email = currentEmail.trim() + prefix\n\n    let re = /\\S+@\\S+\\.\\S+/\n    if (!re.test(email)) {\n      setAlert({ message: 'Cannot add invalid email!', severity: 'error' })\n      setAlertOpen(true)\n      return\n    }\n\n    let supervisorsList = [...supervisors]\n    supervisorsList.push({ email: email })\n    setCurrentEmail('')\n    setSupervisors(supervisorsList)\n  }\n\n  const onAddBulk = bulksupervisors => {\n    let supervisorsList = [...supervisors]\n    for (let supervisor of bulksupervisors) {\n      // Skip any empty rows or strings\n      if (!supervisor || supervisor.length === 0) {\n        return\n      }\n      supervisorsList.push({\n        id: supervisorsList.length,\n        email: supervisor\n      })\n    }\n    setSupervisors(supervisorsList)\n  }\n\n  const onUpload = async e => {\n    if (supervisors.length === 0) {\n      return console.log('Please enter some supervisor emails before uploading')\n    }\n\n    let body = {\n      supervisors: supervisors\n    }\n\n    console.log('Uploading: ', body)\n    setUploading(true)\n\n    api\n      .post('/supervisor/assign', body)\n      .then(res => {\n        console.log(res.data.supervisors)\n        if (res.data.supervisors.length > 0) {\n          let supervisorsMap = [...supervisors]\n          let emailsMap = supervisors.map(supervisor => supervisor.email)\n\n          for (let supervisor of res.data.supervisors) {\n            let index = emailsMap.indexOf(supervisor.email)\n\n            if (index < 0) {\n              // Couldn't find supervisor email address returned from api\n              continue\n            }\n\n            supervisorsMap[index].status = supervisor.status\n          }\n\n          let remainingsupervisors = supervisorsMap.filter(\n            supervisor =>\n              !['assigned', 'exists', undefined].includes(supervisor?.status)\n          )\n          console.log(remainingsupervisors)\n          if (remainingsupervisors.length > 0) {\n            setAlert({\n              message: 'Could not add the following supervisor emails',\n              severity: 'error'\n            })\n            setAlertOpen(true)\n          } else {\n            setAlert({\n              message: 'Supervisors were added successfully',\n              severity: 'success'\n            })\n            setAlertOpen(true)\n          }\n          return setSupervisors(remainingsupervisors)\n        }\n        setSupervisors([])\n\n        setAlert({\n          message: 'All supervisors were sucessfully added',\n          severity: 'success'\n        })\n\n        setAlertOpen(true)\n      })\n      .catch(err => {\n        console.log(err)\n        setAlert({\n          message: 'An error occurred, please try again',\n          severity: 'error'\n        })\n        setAlertOpen(true)\n      })\n      .finally(() => {\n        setUploading(false)\n      })\n  }\n\n  const onChangeEmailPrefix = e => {\n    setIncludeEmailPrefix(e.target.checked)\n  }\n\n  const handleRemove = studentEmail => {\n    let filteredSupervisors = supervisors.filter(s => s.email !== studentEmail)\n    setSupervisors(filteredSupervisors)\n  }\n\n  const endAdornment = includeEmailPrefix ? (\n    <span style={{ fontSize: '10px', color: 'gray', marginRight: 10 }}>\n      @ul.ie\n    </span>\n  ) : (\n    ''\n  )\n\n  return (\n    <Container maxWidth=\"lg\">\n      <BackButton />\n      <Typography variant=\"h6\">Add Supervisors (CSV File)</Typography>\n      <CSVUploader onAdd={onAddBulk} />\n\n      <br />\n      <Divider />\n      <br />\n\n      <Typography variant=\"h6\">Add Supervisor by Email</Typography>\n      <UserEmailInputField\n        email={currentEmail}\n        endAdornment={endAdornment}\n        onChange={onChange}\n        includeEmailPrefix={includeEmailPrefix}\n        onChangeEmailPrefix={onChangeEmailPrefix}\n        onAdd={onAdd}\n      />\n\n      <br />\n\n      <CollapsableAlert\n        open={alertOpen}\n        setOpen={setAlertOpen}\n        message={alert.message}\n        severity={alert.severity}\n      />\n\n      <br />\n\n      <PaginatedTable\n        value={supervisors}\n        removableEntries\n        removeEntry={handleRemove}\n      />\n\n      <UploadButton\n        disabled={!supervisors.length}\n        loading={uploading}\n        onUpload={onUpload}\n      />\n      <PrimaryButton\n        type=\"button\"\n        color=\"secondary\"\n        onClick={() => {\n          setSupervisors([])\n        }}>\n        Clear Supervisor List\n      </PrimaryButton>\n    </Container>\n  )\n}\n\nexport default SupervisorAssignment\n","import React, { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { Container, Typography } from '@material-ui/core'\n\nimport api from '../../utils/api.axios'\n\nimport Input from '../Input'\nimport PrimaryButton from '../PrimaryButton'\nimport CollapsableAlert from '../CollapsableAlert'\n\nimport UserTable from './UserTable'\n\nconst SupervisorManagement = props => {\n  const [supervisors, setSupervisors] = useState([])\n  const [visableSupervisors, setVisableSupervisors] = useState([])\n  const [loading, setLoading] = useState(true)\n  const [removing, setRemoving] = useState('')\n  const [alert, setAlert] = useState({\n    message: 'No Message Supplied',\n    severity: 'info'\n  })\n  const [alertOpen, setAlertOpen] = useState(false)\n\n  useEffect(() => {\n    refreshSupervisorList()\n  }, [])\n\n  const refreshSupervisorList = () => {\n    // Get supervisors from DB\n    api\n      .get('/supervisor')\n      .then(res => {\n        console.log(res)\n        setSupervisors(res.data.supervisors)\n        setVisableSupervisors(res.data.supervisors)\n      })\n      .catch(err => {\n        console.log(err)\n      })\n      .finally(() => {\n        setLoading(false)\n      })\n  }\n\n  const handleSearch = e => {\n    if (e.target.value === '') {\n      return setVisableSupervisors(supervisors)\n    }\n    // TODO: Search not working for inside sentence search\n    let searched = supervisors.filter(\n      supervisor =>\n        !supervisor.email.indexOf(e.target.value.trim().toLowerCase())\n    )\n    setVisableSupervisors(searched)\n  }\n\n  const handleRemove = id => {\n    console.log('removing supervisor w/ id', id)\n\n    setRemoving(id)\n    api\n      .post('/supervisor/delete', { supervisorId: id })\n      .then(res => {\n        console.log(res)\n        refreshSupervisorList()\n      })\n      .catch(err => {\n        console.log(err)\n        setAlert({\n          message: 'Could not remove Supervisor',\n          severity: 'error'\n        })\n        setAlertOpen(true)\n      })\n      .finally(() => {\n        setRemoving(null)\n      })\n  }\n\n  if (loading) {\n    return <p>Loading...</p>\n  }\n\n  return (\n    <Container maxwidth=\"md\">\n      <Typography variant=\"h4\" align=\"center\">\n        Supervisor Management\n      </Typography>\n\n      <Input label=\"Search\" onChange={handleSearch} />\n\n      <UserTable\n        values={visableSupervisors}\n        remove={handleRemove}\n        removing={removing}\n      />\n\n      <CollapsableAlert\n        open={alertOpen}\n        setOpen={setAlertOpen}\n        message={alert.message}\n        severity={alert.severity}\n      />\n\n      <Link to=\"/supervisor/assign\">\n        <PrimaryButton>Go to Assign Supervisors Page</PrimaryButton>\n      </Link>\n    </Container>\n  )\n}\n\nexport default SupervisorManagement\n","import * as yup from 'yup'\n\nconst defaultValues = {\n  coordinator: ''\n}\n\nconst formSchema = yup.object().shape({\n  coordinator: yup\n    .string()\n    .email('Must be a valid email')\n    .required('Email address must not be blank')\n})\n\nexport { formSchema, defaultValues }\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport {\n  Paper,\n  Table,\n  TableContainer,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  Button\n} from '@material-ui/core'\nimport DeleteIcon from '@material-ui/icons/Delete'\n\nimport CollapsableAlert from '../../CollapsableAlert'\n\nconst ListCoordinatorTable = props => {\n  return (\n    <>\n      <TableContainer component={Paper}>\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Name</TableCell>\n              <TableCell align=\"right\">Email</TableCell>\n              <TableCell align=\"right\">Actions</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {props.refreshing ? (\n              <TableRow>\n                <TableCell component=\"th\" scope=\"row\" colSpan={3}>\n                  Refreshing Coordinator List ...\n                </TableCell>\n              </TableRow>\n            ) : props.value.length === 0 ? (\n              <TableRow>\n                <TableCell component=\"th\" scope=\"row\" colSpan={3}>\n                  No Coordinators Found\n                </TableCell>\n              </TableRow>\n            ) : (\n              props.value.map(coordinator => (\n                <TableRow key={coordinator.id}>\n                  <TableCell component=\"th\" scope=\"row\">\n                    {coordinator.displayName}\n                  </TableCell>\n                  <TableCell align=\"right\">{coordinator.email}</TableCell>\n                  <TableCell align=\"right\">\n                    <Button\n                      variant=\"outlined\"\n                      color=\"secondary\"\n                      startIcon={<DeleteIcon />}\n                      onClick={() => props.handleRemove(coordinator)}>\n                      Remove\n                    </Button>\n                  </TableCell>\n                </TableRow>\n              ))\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <CollapsableAlert\n        open={props.open}\n        setOpen={props.setOpen}\n        message={props.alert.message}\n        severity={props.alert.severity}\n      />\n    </>\n  )\n}\n\nListCoordinatorTable.propTypes = {\n  refreshing: PropTypes.bool.isRequired,\n  value: PropTypes.array.isRequired,\n  handleRemove: PropTypes.func.isRequired,\n  open: PropTypes.bool.isRequired,\n  setOpen: PropTypes.func.isRequired,\n  alert: PropTypes.object.isRequired\n}\n\nexport default ListCoordinatorTable\n","import React, { useState, useEffect } from 'react'\nimport { useForm } from 'react-hook-form'\nimport { yupResolver } from '@hookform/resolvers/yup'\nimport {\n  formSchema,\n  defaultValues\n} from '../../../utils/yupSchemas/ManageCoordinator.js'\n\nimport {\n  Container,\n  Button,\n  Typography,\n  Dialog,\n  DialogContent,\n  DialogTitle,\n  DialogContentText,\n  DialogActions,\n  Slide\n} from '@material-ui/core'\nimport { ArrowForward, Delete } from '@material-ui/icons'\n\nimport api from '../../../utils/api.axios'\n\nimport ListCoordinatorTable from './ListCoordinatorTable'\nimport PrimaryButton from '../../PrimaryButton'\nimport Input from '../../Input'\nimport CollapsableAlert from '../../CollapsableAlert'\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />\n})\n\nexport default function ManageCoordinator(props) {\n  const [selectedCoordinator, setSelectedCoordinator] = useState()\n  const [assignedCoordinators, setAssignedCoordinators] = useState([])\n  const [dialogOpen, setDialogOpen] = useState(false)\n  const [refreshing, setRefreshing] = useState(true)\n  const [alert, setAlert] = useState({})\n  const [alertOpen, setAlertOpen] = useState(false)\n  const [tableAlert, setTableAlert] = useState({})\n  const [tableAlertOpen, setTableAlertOpen] = useState(false)\n\n  const { register, handleSubmit, errors } = useForm({\n    resolver: yupResolver(formSchema),\n    reValidateMode: 'onChange',\n    defaultValues\n  })\n\n  useEffect(() => {\n    refreshAssignedCoordinators()\n  }, [])\n\n  const handleAssignCoordinator = data => {\n    api\n      .post('/coordinator/assign', data)\n      .then(res => {\n        switch (res.data?.coordinator[0]?.status) {\n          case 'assigned':\n            console.log('Sucessful Coordinator assign')\n            // TODO: Find out how to assign this role automatically\n            setAlert({\n              message: 'Coordinator suvessfully assigned',\n              severity: 'success'\n            })\n            refreshAssignedCoordinators()\n            break\n          case 'exists':\n            setAlert({\n              message: 'User is already a Coordinator',\n              severity: 'warning'\n            })\n            break\n          case 'not_found':\n            setAlert({\n              message:\n                'Email address supplied could not be linked to an active user',\n              severity: 'error'\n            })\n            break\n          default:\n            setAlert({\n              message: 'An error occurred, please try again',\n              severity: 'error'\n            })\n        }\n        console.log(alert)\n        setAlertOpen(true)\n      })\n      .catch(err => {\n        setAlert({\n          message: 'An error occurred, please try again',\n          severity: 'warning'\n        })\n        setAlertOpen(true)\n      })\n  }\n\n  const refreshAssignedCoordinators = () => {\n    setRefreshing(true)\n\n    api\n      .get('/coordinator')\n      .then(res => {\n        if (!res.data?.coordinators) {\n          return setAssignedCoordinators([])\n        }\n\n        setAssignedCoordinators(res.data.coordinators)\n      })\n      .catch(err => {\n        console.log(err)\n        setTableAlert({\n          message: err.message,\n          severity: 'error'\n        })\n        setTableAlertOpen(true)\n        setRefreshing(false)\n      })\n      .finally(() => {\n        setRefreshing(false)\n      })\n  }\n\n  const handleRemoveClick = coordinator => {\n    setSelectedCoordinator(coordinator)\n    setDialogOpen(true)\n  }\n\n  const handleRemove = deleteCoordinator => {\n    if (deleteCoordinator) {\n      api\n        .post('/coordinator/remove', { coordinatorId: selectedCoordinator._id })\n        .then(resp => {\n          console.log(resp)\n          setTableAlert({\n            message: 'Coordinator sucessfully removed',\n            severity: 'success'\n          })\n          setTableAlertOpen(true)\n          refreshAssignedCoordinators()\n        })\n        .catch(err => {\n          switch (err) {\n            case 'error_while_retrieving_coordinator':\n              setTableAlert({\n                message:\n                  'An error occurred while retrieving the selected coordinator, please try again',\n                severity: 'warning'\n              })\n              break\n            case 'unable_to_remove':\n              // Could not delete user from database (please try again)\n              setTableAlert({\n                message: 'Could not remove coordinator, please try again',\n                severity: 'warning'\n              })\n              break\n            case 'coordinator_not_found':\n              setTableAlert({\n                message: 'Could not find selected coordinator',\n                severity: 'warning'\n              })\n              refreshAssignedCoordinators()\n              break\n            default:\n              console.log(err)\n              setTableAlert({\n                message: 'Could not remove coordinator',\n                severity: 'error'\n              })\n          }\n\n          setTableAlertOpen(true)\n        })\n      setDialogOpen(false)\n    } else {\n      setDialogOpen(false)\n    }\n  }\n\n  return (\n    <Container maxWidth=\"md\">\n      <Dialog\n        open={dialogOpen}\n        TransitionComponent={Transition}\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\">\n        <DialogTitle id=\"alert-dialog-slide-title\">\n          Remove Coordinator?\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-slide-description\">\n            Are you sure you want to remove\n            <br />\n            <span style={{ fontWeight: 'bold' }}>\n              {selectedCoordinator?.displayName}\n            </span>\n            <br />\n            Coordinator role?\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            variant=\"outlined\"\n            onClick={() => handleRemove(false)}\n            color=\"primary\">\n            No\n          </Button>\n          <Button\n            startIcon={<Delete />}\n            variant=\"contained\"\n            onClick={() => handleRemove(true)}\n            color=\"secondary\">\n            Yes\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Typography variant=\"h6\">Manage Coordinators</Typography>\n      <br />\n      <form onSubmit={handleSubmit(handleAssignCoordinator)}>\n        <Input\n          inputRef={register}\n          label=\"Coordinator Email\"\n          placeholder=\"e.g. John.Keane@ul.ie\"\n          variant=\"outlined\"\n          name=\"coordinator\"\n          style={{ margin: 0 }}\n          error={!!errors.coordinator}\n          helperText={errors?.coordinator?.message}\n        />\n        <PrimaryButton\n          variant=\"contained\"\n          color=\"primary\"\n          endIcon={<ArrowForward />}>\n          Assign New Coordinator\n        </PrimaryButton>\n        <CollapsableAlert\n          open={alertOpen}\n          setOpen={setAlertOpen}\n          message={alert.message}\n          severity={alert.severity}\n        />\n      </form>\n\n      <Typography variant=\"h6\">Existing Coordinators</Typography>\n      <br />\n\n      <ListCoordinatorTable\n        refreshing={refreshing}\n        value={assignedCoordinators}\n        open={tableAlertOpen}\n        setOpen={setTableAlertOpen}\n        handleRemove={handleRemoveClick}\n        alert={tableAlert}\n      />\n    </Container>\n  )\n}\n","import React, { useContext, useState } from 'react'\nimport { useMsal } from '@azure/msal-react'\nimport {\n  Avatar,\n  Button,\n  Box,\n  IconButton,\n  Menu,\n  MenuItem,\n  Toolbar\n} from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { useHistory, Link } from 'react-router-dom'\nimport { Can } from '../Auth/Can'\n\nimport Topic from '../Auth/Topic'\nimport Proposal from '../Auth/Proposal'\nimport Phase from '../Auth/Phase'\n\nimport { PhaseContext } from '../contexts/PhaseContext'\n\nimport HomeIcon from '@material-ui/icons/Home'\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\n\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp'\n\nconst useStyles = makeStyles(theme => ({\n  navDisplayFlex: {\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'center'\n  },\n  linkText: {\n    textDecoration: 'none',\n    textTransform: 'none',\n    color: 'white'\n  },\n  linkButton: {\n    margin: '0 5px'\n  }\n}))\n\nexport default function NavBar(props) {\n  const styles = useStyles()\n  const { currentPhase } = useContext(PhaseContext)\n\n  const history = useHistory()\n  const { instance, accounts } = useMsal()\n  const account = accounts[0]\n\n  const accountAbbr = account.name.split(' ').map(el => el[0])\n\n  const [anchorEl, setAnchorEl] = useState(null)\n\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget)\n  }\n\n  const handleClose = () => {\n    setAnchorEl(null)\n  }\n\n  return (\n    <Toolbar>\n      <div style={{ flexGrow: 1 }}>\n        <Link to=\"/\">\n          <IconButton edge=\"start\" aria-label=\"home\">\n            <HomeIcon fontSize=\"large\" style={{ color: 'white' }} />\n          </IconButton>\n        </Link>\n        {currentPhase.phase === 3 || currentPhase.phase === 4 ? (\n          <>\n            <Can I=\"read\" a={Topic.name}>\n              <Link to=\"/topics\" className={styles.linkButton}>\n                <Button className={styles.linkText}>View Topics List</Button>\n              </Link>\n            </Can>\n\n            <Can I=\"manage\" a={Proposal.name}>\n              <Link to=\"/proposals\" className={styles.linkButton}>\n                <Button className={styles.linkText}>My Proposals</Button>\n              </Link>\n            </Can>\n          </>\n        ) : null}\n\n        {/* Supervisor */}\n        {(currentPhase.phase === 2 ||\n          currentPhase.phase === 3 ||\n          currentPhase.phase === 4) && (\n          <Can I=\"manage\" a={Topic.name}>\n            <Link to=\"/topics/manage\" className={styles.linkButton}>\n              <Button className={styles.linkText}>My Topics</Button>\n            </Link>\n          </Can>\n        )}\n\n        {/* Coordinator */}\n        <Can I=\"manage\" a=\"Student\">\n          <Link to=\"/student/manage\" className={styles.linkButton}>\n            <Button className={styles.linkText}>Manage Students</Button>\n          </Link>\n        </Can>\n        <Can I=\"manage\" a=\"Supervisor\">\n          <Link to=\"/supervisor/manage\" className={styles.linkButton}>\n            <Button className={styles.linkText}>Manage Supervisors</Button>\n          </Link>\n        </Can>\n\n        {/* Administrator / Coordinator */}\n        <Can I=\"takeActionPhaseOne\" this={currentPhase}>\n          <Can I=\"create\" a=\"Coordinator\">\n            <Link to=\"/coordinator\" className={styles.linkButton}>\n              <Button className={styles.linkText}>Manage Coordinators</Button>\n            </Link>\n          </Can>\n        </Can>\n        <Can I=\"update\" a={Phase.name}>\n          <Link to=\"/phase/manage\" className={styles.linkButton}>\n            <Button className={styles.linkText}>Manage Phases</Button>\n          </Link>\n        </Can>\n      </div>\n\n      {/* User Avatar */}\n      <Box edge=\"end\">\n        <Button\n          aria-label=\"delete\"\n          onClick={handleClick}\n          endIcon={<ExpandMoreIcon style={{ color: 'white' }} />}>\n          <Avatar style={{ color: 'white' }}>{accountAbbr}</Avatar>\n        </Button>\n\n        <Menu\n          anchorEl={anchorEl}\n          keepMounted\n          open={Boolean(anchorEl)}\n          onClose={handleClose}\n          getContentAnchorEl={null}\n          anchorOrigin={{\n            vertical: 'bottom',\n            horizontal: 'center'\n          }}\n          transformOrigin={{\n            vertical: 'top',\n            horizontal: 'center'\n          }}>\n          <MenuItem\n            onClick={() => {\n              instance.logout({\n                onRedirectNavigate: process.env.REACT_APP_REDIRECT_URL\n              })\n              setAnchorEl(null)\n            }}>\n            <ListItemIcon>\n              <ExitToAppIcon fontSize=\"small\" />\n            </ListItemIcon>\n            <ListItemText primary=\"Logout\" />\n          </MenuItem>\n        </Menu>\n      </Box>\n    </Toolbar>\n  )\n}\n","import React from 'react'\nimport { AppBar } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport NavBar from './NavBar'\n\nconst useStyles = makeStyles(theme => ({\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1\n  }\n}))\n\nexport default function Header(props) {\n  const classes = useStyles()\n  return (\n    <AppBar position=\"fixed\" className={classes.appBar}>\n      <NavBar />\n    </AppBar>\n  )\n}\n","const proposalStatuses = {\n  draft: 'Draft',\n  submitted: 'Pending Supervisor Feedback',\n  under_review: 'Under Review',\n  pending_edits: 'Edits Required',\n  accepted: 'Accepted',\n  rejected: 'Rejected'\n}\nconst proposalStatusToHumanFriendlyString = status => proposalStatuses[status]\n\nexport { proposalStatuses, proposalStatusToHumanFriendlyString }\n","import * as yup from 'yup'\nimport { proposalStatuses } from '../proposal'\n\nconst defaultValues = {\n  title: '',\n  status: '',\n  description: '',\n  chooseMeMessage: '',\n  additionalNotes: '',\n  environment: '',\n  languages: '',\n  type: ''\n}\n\nconst basicSchemaObj = {\n  title: yup.string().required('Proposal must have a title'),\n  description: yup.string().required('Proposal must have a description'),\n  chooseMeMessage: yup.string(),\n  additionalNotes: yup.string(),\n  environment: yup.string(),\n  languages: yup.string()\n}\n\nconst formSchema = yup.object().shape({ ...basicSchemaObj })\n\nconst editFormSchema = yup.object().shape({\n  description: yup.string().required('Proposal must have a description'),\n  chooseMeMessage: yup.string(),\n  additionalNotes: yup.string(),\n  environment: yup.string(),\n  languages: yup.string()\n})\n\nexport { formSchema, editFormSchema, defaultValues }\n","import React, { useState, useContext } from 'react'\nimport PropTypes from 'prop-types'\nimport { PhaseContext } from '../../contexts/PhaseContext'\nimport { useForm } from 'react-hook-form'\nimport * as _ from 'lodash'\n\nimport {\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  IconButton,\n  DialogActions,\n  Divider,\n  CircularProgress,\n  Typography\n} from '@material-ui/core'\nimport { Edit, Cancel } from '@material-ui/icons'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { green } from '@material-ui/core/colors'\n\nimport api from '../../utils/api.axios'\nimport { yupResolver } from '@hookform/resolvers/yup'\nimport { editFormSchema } from '../../utils/yupSchemas/yupProposalSchema'\n\nimport Input from '../Input'\nimport MultiLineInput from '../MultiLineInput'\nimport PrimaryButton from '../PrimaryButton'\n\nconst useStyles = makeStyles(theme => ({\n  formControl: {\n    minWidth: 300,\n    flex: 1\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  },\n  readOnlySelect: {\n    width: 300,\n    '&.Mui-disabled option': {\n      color: 'black'\n    }\n  },\n  buttonProgress: {\n    color: green[500],\n    position: 'absolute',\n    left: '50%'\n  }\n}))\n\nconst ProposalModal = props => {\n  const classes = useStyles()\n\n  let defaultValues = (({\n    title,\n    description,\n    chooseMessage,\n    additionalNotes,\n    environment,\n    languages,\n    type\n  }) => ({\n    title,\n    description,\n    chooseMessage: chooseMessage || '',\n    additionalNotes: additionalNotes || '',\n    environment,\n    languages,\n    type\n  }))(props.proposal)\n\n  const [editMode, setEditMode] = useState(false)\n  const [savingChanges, setSavingChanges] = useState(false)\n\n  const { currentPhase } = useContext(PhaseContext)\n\n  const { register, handleSubmit, errors, control } = useForm({\n    resolver: yupResolver(editFormSchema),\n    reValidateMode: 'onChange',\n    defaultValues\n  })\n\n  const toggleEditMode = () => {\n    let edtmd = !editMode\n    setEditMode(edtmd)\n  }\n\n  const compareDiffs = data => {\n    let differences = _.reduce(\n      data,\n      function (result, value, key) {\n        // Compare data and props.proposal properties\n        if (!_.isEqual(value, props.proposal[key])) result[key] = value\n        return result\n      },\n      {}\n    )\n\n    return Object.keys(differences).length > 0 ? differences : null\n  }\n\n  const onSubmit = data => {\n    console.log('Submitting', data)\n    let differences = compareDiffs(data)\n\n    console.log('Differences', differences)\n\n    if (differences) {\n      api\n        .post(`/proposal/edit/${props.proposal._id}`, differences)\n        .then(res => {\n          console.log(res)\n          props.refresh()\n        })\n        .catch(err => {\n          console.log(err)\n        })\n        .finally(() => {\n          setSavingChanges(false)\n          toggleEditMode()\n        })\n    } else {\n      toggleEditMode()\n    }\n  }\n\n  return (\n    <Dialog\n      fullWidth\n      maxWidth=\"lg\"\n      open={props.dialogOpen}\n      onClose={() => {\n        console.log('impement dialog close')\n      }}\n      aria-labelledby=\"max-width-dialog-title\"\n      style={{ zIndex: '900 !important' }}\n      disableBackdropClick>\n      <DialogTitle id=\"max-width-dialog-title\">\n        {['draft', 'pending_edits'].includes(props.proposal.status) ? (\n          <IconButton onClick={toggleEditMode} disabled={savingChanges}>\n            <Edit />\n          </IconButton>\n        ) : null}\n\n        <IconButton\n          edge=\"end\"\n          onClick={() => {\n            props.setDialogOpen(false)\n          }}\n          disabled={savingChanges}>\n          <Cancel />\n        </IconButton>\n        <Divider />\n      </DialogTitle>\n      <DialogContent>\n        <Input\n          inputRef={register}\n          name=\"title\"\n          label=\"Title\"\n          variant=\"outlined\"\n          margin=\"none\"\n          readOnly={!editMode}\n          error={!!errors.description}\n          helperText={errors?.description?.message}\n        />\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <MultiLineInput\n            inputRef={register}\n            name=\"description\"\n            label=\"Description\"\n            readOnly={!editMode}\n            error={!!errors.description}\n            helperText={errors?.description?.message}\n          />\n\n          <MultiLineInput\n            inputRef={register}\n            label=\"Choose Me Message\"\n            placeholder=\"<No Choose Message Supplied>\"\n            name=\"chooseMessage\"\n            readOnly={!editMode}\n            error={!!errors.chooseMessage}\n            helperText={errors?.chooseMessage?.message}\n          />\n\n          <MultiLineInput\n            inputRef={register}\n            label=\"Additional Notes\"\n            placeholder=\"<No Additional Notes Supplied>\"\n            name=\"additionalNotes\"\n            readOnly={!editMode}\n            error={!!errors.additionalNotes}\n            helperText={errors?.additionalNotes?.message}\n          />\n\n          {defaultValues.type === 'studentDefined' ? (\n            <>\n              <MultiLineInput\n                inputRef={register}\n                label=\"Environment\"\n                name=\"environment\"\n                readOnly={!editMode}\n                error={!!errors.environment}\n                helperText={errors?.environment?.message}\n              />\n              <MultiLineInput\n                inputRef={register}\n                label=\"Languages\"\n                name=\"languages\"\n                readOnly={!editMode}\n                error={!!errors.languages}\n                helperText={errors?.languages?.message}\n              />\n            </>\n          ) : null}\n\n          {props.proposal?.supervisorMessage !== '' ? (\n            <>\n              <Divider />\n              <Typography variant=\"h6\">Supervisor Feedback</Typography>\n              <MultiLineInput\n                label=\"Supervisor Notes\"\n                value={props.proposal.supervisorMessage}\n                readOnly\n              />\n            </>\n          ) : null}\n\n          {editMode && (\n            <PrimaryButton loading={savingChanges}>Save Changes</PrimaryButton>\n          )}\n        </form>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nProposalModal.defaultProps = {\n  proposal: {},\n  setDialogOpen: () => {},\n  dialogOpen: true,\n  refresh: () => {}\n}\n\nProposalModal.propTypes = {\n  proposal: PropTypes.object.isRequired,\n  dialogOpen: PropTypes.bool.isRequired,\n  setDialogOpen: PropTypes.func.isRequired,\n  refresh: PropTypes.func.isRequired\n}\n\nexport default ProposalModal\n","import React, { useState, useEffect, useContext } from 'react'\nimport { PhaseContext } from '../../contexts/PhaseContext'\nimport { Can } from '../../Auth/Can'\nimport PropTypes from 'prop-types'\nimport {\n  Container,\n  Typography,\n  Link as MuiLink,\n  TableContainer,\n  Paper,\n  Table,\n  TableHead,\n  TableBody,\n  TableRow,\n  TableCell,\n  Button\n} from '@material-ui/core'\nimport EditIcon from '@material-ui/icons/Edit'\nimport { useHistory } from 'react-router-dom'\n\nimport api from '../../utils/api.axios'\n\nimport { proposalStatusToHumanFriendlyString } from '../../utils/proposal'\n\nimport ProposalModal from './ProposalModal'\n\nconst NextActionButton = props => {\n  switch (props.status) {\n    case 'draft':\n      return (\n        <Button onClick={() => props.updateStatus(props.proposalId)}>\n          Submit Proposal\n        </Button>\n      )\n    case 'pending_edits':\n      return (\n        <Button onClick={() => props.updateStatus(props.proposalId)}>\n          Submit Updated Proposal\n        </Button>\n      )\n    case 'submitted':\n      return (\n        <Can I=\"takeActionPhaseThree\" this={props.currentPhase}>\n          <Button\n            variant=\"outlined\"\n            color=\"secondary\"\n            startIcon={<EditIcon />}\n            onClick={() => props.downgradeStatus(props.proposalId)}>\n            Convert to Draft\n          </Button>\n        </Can>\n      )\n    default:\n      return null\n  }\n}\n\nNextActionButton.propTypes = {\n  updateStatus: PropTypes.func.isRequired,\n  downgradeStatus: PropTypes.func.isRequired,\n  proposalId: PropTypes.string.isRequired,\n  status: PropTypes.string.isRequired,\n  currentPhase: PropTypes.object.isRequired\n}\n\nconst ProposalsTable = props => {\n  const history = useHistory()\n  return (\n    <TableContainer component={Paper}>\n      <Table aria-label=\"simple table\">\n        <TableHead>\n          <TableRow>\n            <TableCell>Title</TableCell>\n            <TableCell>For Topic</TableCell>\n            <TableCell>Status</TableCell>\n            <TableCell align=\"right\">Actions</TableCell>\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {props.loading ? (\n            <TableRow key=\"loading_supervisor_proposals\">\n              <TableCell colSpan={4}>Loading Values ...</TableCell>\n            </TableRow>\n          ) : props.values.length === 0 ? (\n            <TableRow key=\"no_supervisor_proposals\">\n              <TableCell colSpan={4}>No Proposals to show</TableCell>\n            </TableRow>\n          ) : (\n            props.values.map(proposal => (\n              <TableRow key={proposal.id}>\n                <TableCell>\n                  <MuiLink\n                    onClick={() => {\n                      props.setSelectedProposal(proposal)\n                      props.setDialogOpen(true)\n                    }}>\n                    {proposal.title}\n                  </MuiLink>\n                </TableCell>\n                <TableCell>\n                  <MuiLink\n                    onClick={() =>\n                      history.push(`/topics/view/${proposal.topic._id}`)\n                    }>\n                    {proposal.topic.title}\n                  </MuiLink>\n                </TableCell>\n                <TableCell>\n                  {proposalStatusToHumanFriendlyString(proposal.status)}\n                </TableCell>\n                <TableCell align=\"right\">\n                  <NextActionButton\n                    status={proposal.status}\n                    proposalId={proposal._id}\n                    updateStatus={props.updateStatus}\n                    downgradeStatus={props.downgradeStatus}\n                    currentPhase={props.currentPhase}\n                  />\n                </TableCell>\n              </TableRow>\n            ))\n          )}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  )\n}\n\nProposalsTable.propTypes = {\n  values: PropTypes.array.isRequired,\n  loading: PropTypes.bool.isRequired,\n  setSelectedProposal: PropTypes.func.isRequired,\n  updateStatus: PropTypes.func.isRequired,\n  downgradeStatus: PropTypes.func.isRequired,\n  setDialogOpen: PropTypes.func.isRequired,\n  currentPhase: PropTypes.object.isRequired\n}\n\nconst ManageProposal = props => {\n  const [supervisorProposals, setSupervisorProposals] = useState([])\n  const [customProposals, setCustomProposals] = useState([])\n  const [selectedProposal, setSelectedProposal] = useState()\n  const [loading, setLoading] = useState(true)\n  const [dialogOpen, setDialogOpen] = useState(false)\n\n  const { currentPhase } = useContext(PhaseContext)\n\n  useEffect(() => {\n    refreshProposalList()\n  }, [])\n\n  const refreshProposalList = () => {\n    api\n      .get('/proposal/me')\n      .then(res => {\n        console.log(res)\n\n        let supervisor = res.data.proposals.filter(\n          proposal => proposal.type === 'supervisorDefined'\n        )\n        let custom = res.data.proposals.filter(\n          proposal => proposal.type === 'studentDefined'\n        )\n\n        console.log(supervisor)\n        console.log(custom)\n\n        setSupervisorProposals(supervisor)\n        setCustomProposals(custom)\n      })\n      .catch(err => {\n        console.log(err)\n      })\n      .finally(() => {\n        setLoading(false)\n      })\n  }\n\n  const setDialogOpenFunc = val => {\n    if (!val) {\n      setSelectedProposal(null)\n    }\n    setDialogOpen(val)\n  }\n\n  const updateStatus = proposalId => {\n    api\n      .post(`/proposal/${proposalId}/upgrade`)\n      .then(res => {\n        console.log(res)\n        refreshProposalList()\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  }\n\n  const downgradeStatus = proposalId => {\n    api\n      .post(`/proposal/${proposalId}/downgrade`)\n      .then(res => {\n        console.log(res)\n        refreshProposalList()\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  }\n\n  return (\n    <>\n      {selectedProposal ? (\n        <ProposalModal\n          key={selectedProposal._id}\n          dialogOpen={dialogOpen}\n          setDialogOpen={setDialogOpenFunc}\n          proposal={selectedProposal}\n          refresh={refreshProposalList}\n        />\n      ) : null}\n      <Container maxWidth=\"lg\">\n        <Typography variant=\"h4\" align=\"center\">\n          Proposal Management\n        </Typography>\n        {currentPhase.phase !== 4 ? (\n          <Typography align=\"center\">\n            Supervisors will be available to respond to Proposals during Phase 4\n          </Typography>\n        ) : null}\n        <Typography>Supervisor Topic Proposals</Typography>\n        <ProposalsTable\n          loading={loading}\n          values={supervisorProposals}\n          updateStatus={updateStatus}\n          downgradeStatus={downgradeStatus}\n          setSelectedProposal={setSelectedProposal}\n          setDialogOpen={setDialogOpen}\n          currentPhase={currentPhase}\n        />\n\n        <Typography>Custom Proposals</Typography>\n        <ProposalsTable\n          loading={loading}\n          values={customProposals}\n          updateStatus={updateStatus}\n          downgradeStatus={downgradeStatus}\n          setSelectedProposal={setSelectedProposal}\n          setDialogOpen={setDialogOpen}\n          currentPhase={currentPhase}\n        />\n      </Container>\n    </>\n  )\n}\n\nexport default ManageProposal\n","import React, { useState, useEffect } from 'react'\nimport { useParams, Link } from 'react-router-dom'\nimport { Can } from '../Auth/Can'\n\nimport { Container, Typography, Box } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nimport Input from './Input'\nimport MultiLineInput from './MultiLineInput'\nimport PrimaryButton from './PrimaryButton'\nimport BackButton from './Buttons/BackButton'\n\nimport api from '../utils/api.axios'\n\nconst useStyles = makeStyles(theme => ({\n  class1: {\n    marginLeft: theme.spacing(4)\n  }\n}))\n\nconst ViewTopic = props => {\n  let { id } = useParams()\n\n  const classes = useStyles()\n\n  const [loading, setLoading] = useState(true)\n  const [topic, setTopic] = useState(null)\n  const [invalidCode, setInvalidCode] = useState(false)\n\n  useEffect(() => {\n    api\n      .get(`/topic/${id}`)\n      .then(res => {\n        if (res.data.topic) {\n          console.log(res)\n          setTopic(res.data.topic)\n        } else {\n          setInvalidCode(true)\n        }\n      })\n      .catch(err => {\n        console.log(err)\n      })\n      .finally(() => {\n        setLoading(false)\n      })\n  }, [])\n\n  if (loading) {\n    return <h1>loading ...</h1>\n  }\n\n  if (invalidCode) {\n    return <h1>Invalid Topic Code</h1>\n  }\n\n  return (\n    <Container maxWidth=\"md\">\n      <BackButton dense />\n\n      <Input label=\"Title\" value={topic.title} readOnly />\n      <Input label=\"Supervisor\" value={topic.supervisor.displayName} readOnly />\n\n      <br />\n\n      <MultiLineInput label=\"Description\" value={topic.description} readOnly />\n\n      {topic.additionalNotes === '' ? null : (\n        <MultiLineInput\n          label=\"Additional Notes\"\n          value={topic.additionalNotes}\n          readOnly\n        />\n      )}\n\n      <div>\n        {topic.tags.map(tag => (\n          <Box\n            key={tag}\n            style={{\n              display: 'inline-block',\n              backgroundColor: '#dbdbdb',\n              color: '#5b5b5b',\n              margin: '0 3px',\n              padding: '4px',\n              borderRadius: '3px'\n            }}>\n            {tag}\n          </Box>\n        ))}\n      </div>\n\n      <Can I=\"create\" a=\"Proposal\">\n        {topic?.hasProposal ? (\n          <Typography style={{ fontSize: '17px' }} align=\"center\">\n            <Link to=\"/proposals\">\n              You already created a Proposal for this topic\n            </Link>\n          </Typography>\n        ) : (\n          <Link to={`/proposals/add/${topic._id}`}>\n            <PrimaryButton type=\"button\">\n              Look interesting? Draft Proposal for this Topic\n            </PrimaryButton>\n          </Link>\n        )}\n      </Can>\n    </Container>\n  )\n}\nexport default ViewTopic\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport { useData } from '../../contexts/CreateProposalContext'\n\nconst Breadcrumb = props => {\n  const { contextData } = useData()\n  return (\n    <div>\n      <Link to=\"/proposals/add/\">Step 1</Link>\n      {contextData?.isCustomProposal ? (\n        <>\n          ->\n          <Link to=\"/proposals/add/step2\" disabled={contextData?.step < 2}>\n            Step 2\n          </Link>\n        </>\n      ) : (\n        <></>\n      )}{' '}\n      ->\n      <Link to=\"/proposals/add/finish\" disabled={contextData?.step < 3}>\n        Finish\n      </Link>\n    </div>\n  )\n}\n\nexport default Breadcrumb\n","import React, { useEffect, useState } from 'react'\nimport PropTypes from 'prop-types'\nimport { useForm } from 'react-hook-form'\nimport { yupResolver } from '@hookform/resolvers/yup'\n\nimport * as yup from 'yup'\n\nimport api from '../../utils/api.axios'\n\nimport { useData } from '../../contexts/CreateProposalContext'\nimport { useHistory, useParams } from 'react-router-dom'\n\nimport { Typography, Container } from '@material-ui/core'\n\nimport Input from '../Input'\n\nimport PrimaryButton from '../PrimaryButton'\nimport Breadcrumb from './Breadcrumb'\nimport MultiLineInput from '../MultiLineInput'\n\nconst formSchema = yup.object().shape({\n  title: yup.string().required('Proposal must have a title'),\n  description: yup.string().required('Proposl must have a description'),\n  additionalNotes: yup.string(),\n  chooseMeMessage: yup.string()\n})\n\nconst CreateProposal = props => {\n  const [loading, setLoading] = useState(true)\n  const [validTopic, setValidTopic] = useState(false)\n\n  // CreateProposal Context\n  const { setContextData, contextData } = useData()\n  const { topicId } = useParams()\n\n  const defaultValues = {\n    title: contextData?.title || '',\n    description: contextData?.description || '',\n    additionalNotes: contextData?.additionalNotes || '',\n    chooseMeMessage: contextData?.chooseMeMessage || ''\n  }\n\n  const { register, handleSubmit, errors } = useForm({\n    resolver: yupResolver(formSchema),\n    revalidate: 'onChange',\n    defaultValues\n  })\n\n  const history = useHistory()\n\n  useEffect(() => {\n    if (topicId && contextData.topic === null) {\n      console.log('Loading from topicId')\n      api\n        .get('/topic/' + topicId)\n        .then(res => {\n          console.log(res)\n\n          if (res.data.topic) {\n            setContextData({\n              isCustomProposal: res.data.topic.type === 'studentTopic',\n              topic: res.data.topic,\n              step: 1\n            })\n\n            setValidTopic(true)\n          }\n        })\n        .catch(err => {\n          console.log(err)\n        })\n        .finally(() => {\n          setLoading(false)\n        })\n    } else {\n      setLoading(false)\n    }\n  }, [])\n\n  const onSubmit = data => {\n    console.log(data)\n\n    let formData = {\n      ...contextData,\n      title: data.title,\n      description: data.description,\n      additionalNotes: data.additionalNotes,\n      chooseMeMessage: data.chooseMeMessage\n    }\n\n    if (contextData?.step === 1) {\n      formData.step = 2\n    }\n\n    setContextData(formData)\n\n    if (contextData?.isCustomProposal) {\n      return history.push('./step2')\n    }\n    history.push('./finish')\n  }\n\n  if (loading) {\n    return <h1>Loading...</h1>\n  }\n\n  if (!validTopic) {\n    return (\n      <Container maxWidth=\"lg\">\n        <Typography align=\"center\">\n          Cannot create proposal without a selected topic\n        </Typography>\n        <PrimaryButton type=\"button\" onClick={() => history.push('/topics')}>\n          View Available Topics\n        </PrimaryButton>\n      </Container>\n    )\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"md\">\n      <Breadcrumb />\n      <Typography>Create Proposal - Step 1</Typography>\n\n      <form autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\n        <Input\n          inputRef={register}\n          name=\"title\"\n          label=\"Project Title\"\n          error={!!errors.title}\n          helperText={errors?.title?.message}\n        />\n        <MultiLineInput\n          inputRef={register}\n          name=\"description\"\n          label=\"Project Description\"\n          error={!!errors.description}\n          helperText={errors?.description?.message}\n        />\n\n        <MultiLineInput\n          inputRef={register}\n          name=\"chooseMeMessage\"\n          label=\"Why choose me for this topic? (Optional)\"\n          placeholder=\"Why should the topic supervisor choose your project for this topic?\"\n          error={!!errors.chooseMeMessage}\n          helperText={errors?.chooseMeMessage?.message}\n        />\n\n        <MultiLineInput\n          inputRef={register}\n          name=\"additionalNotes\"\n          label=\"Additional Notes (Optional)\"\n          error={!!errors.additionalNotes}\n          helperText={errors?.additionalNotes?.message}\n        />\n\n        <PrimaryButton>Save and Continue</PrimaryButton>\n      </form>\n    </Container>\n  )\n}\n\nCreateProposal.propTypes = {\n  selectedTopic: PropTypes.string\n}\n\nexport default CreateProposal\n","import React, { useEffect } from 'react'\nimport PropTypes from 'prop-types'\nimport { useForm } from 'react-hook-form'\nimport { yupResolver } from '@hookform/resolvers/yup'\n\nimport * as yup from 'yup'\n\nimport { useData } from '../../contexts/CreateProposalContext'\nimport { useHistory } from 'react-router-dom'\n\nimport { Typography, Container } from '@material-ui/core'\n\nimport MultiLineInput from '../MultiLineInput'\nimport PrimaryButton from '../PrimaryButton'\nimport Breadcrumb from './Breadcrumb'\n\nconst formSchema = yup.object().shape({\n  environment: yup.string().required(),\n  languages: yup.string().required()\n})\n\nconst defaultValues = {\n  environment: '',\n  languages: ''\n}\n\nconst CreateProposal = props => {\n  // CreateProposal Context\n  const { setContextData, contextData } = useData()\n  const { register, handleSubmit, errors } = useForm({\n    resolver: yupResolver(formSchema),\n    reValidateMode: 'onChange',\n    defaultValues\n  })\n\n  const history = useHistory()\n\n  useEffect(() => {\n    if (!contextData.topic) {\n      history.push('/proposals/add')\n    }\n  }, [])\n\n  const onSubmit = data => {\n    // Get data from form and store in context\n\n    let formData = {\n      ...contextData,\n      environment: data.environment,\n      languages: data.languages\n    }\n\n    if (contextData?.step === 2) {\n      formData.step = 3\n    }\n\n    history.push('./finish')\n    setContextData(formData)\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"md\">\n      <Breadcrumb />\n      <Typography>Create Proposal - Step 2</Typography>\n\n      <form autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\n        <MultiLineInput\n          inputRef={register}\n          name=\"environment\"\n          label=\"Environment Required\"\n          error={!!errors.environment}\n          helperText={errors?.environment?.message}\n        />\n        <MultiLineInput\n          inputRef={register}\n          name=\"languages\"\n          label=\"Languages / Technologies Required\"\n          error={!!errors.languages}\n          helperText={errors?.languages?.message}\n        />\n\n        <PrimaryButton>Save and Continue</PrimaryButton>\n      </form>\n    </Container>\n  )\n}\n\nCreateProposal.propTypes = {\n  selectedTopic: PropTypes.string\n}\n\nexport default CreateProposal\n","import React, { useContext, useState, useEffect } from 'react'\nimport PropTypes from 'prop-types'\n\nimport { PhaseContext } from '../../contexts/PhaseContext'\nimport { useData } from '../../contexts/CreateProposalContext'\nimport { useHistory } from 'react-router-dom'\n\nimport { Typography, Container, Tooltip } from '@material-ui/core'\n\nimport HelpIcon from '@material-ui/icons/Help'\n\nimport api from '../../utils/api.axios'\n\nimport Input from '../Input'\nimport MultiLineInput from '../MultiLineInput'\nimport PrimaryButton from '../PrimaryButton'\nimport Breadcrumb from './Breadcrumb'\n\nconst CreateProposal = props => {\n  // CreateProposal Context\n  const { setContextData, contextData } = useData()\n  const { currentPhase } = useContext(PhaseContext)\n  const [submitting, setSubmitting] = useState(false)\n\n  const history = useHistory()\n\n  useEffect(() => {\n    console.log('useEffect', contextData.topic)\n    if (!contextData.topic) {\n      history.push('/proposals/add')\n    }\n  }, [])\n\n  const handleNextStep = submitProposal => {\n    // Get data from form and store in context\n\n    let formData = {\n      isCustomProposal: contextData.isCustomProposal,\n      title: contextData.title,\n      description: contextData.description,\n      additionalNotes: contextData.additionalNotes,\n      chooseMessage: contextData.chooseMeMessage,\n      topic: contextData.topic._id,\n      saveAsDraft: !submitProposal\n    }\n\n    if (contextData.isCustomProposal) {\n      let prevData = { ...formData }\n      formData = {\n        ...prevData,\n        environment: contextData.environment,\n        languages: contextData.languages\n      }\n    }\n\n    console.log('Submitting ', formData)\n\n    setSubmitting(true)\n\n    api\n      .post('/proposal/add', formData)\n      .then(res => {\n        console.log(res)\n        setContextData({})\n        history.push('/proposals')\n      })\n      .catch(error => {\n        if (error.response) {\n          switch (error.response.data) {\n            case 'existing_topic_proposal':\n              alert('Cannot create multiple proposals for a single topic')\n              break\n            default:\n              break\n          }\n        } else if (error.request) {\n          // The request was made but no response was received\n          console.log(error.request)\n        } else {\n          // Something happened in setting up the request that triggered an Error\n          console.log('Error', error.message)\n        }\n      })\n      .finally(() => {\n        setSubmitting(false)\n      })\n  }\n\n  return (\n    <Container component=\"main\" maxWidth=\"md\">\n      <Breadcrumb />\n      <Typography>Create Proposal - Finish (Review)</Typography>\n\n      {/* TODO: Print Topic in easier to read fashion */}\n\n      <Typography>\n        {contextData.isCustomProposal\n          ? 'Custom Proposal'\n          : 'Supervisor Defined Proposal'}\n      </Typography>\n\n      {contextData.isCustomProposal ? null : (\n        <>\n          <Input\n            label=\"Related Topic\"\n            value={contextData?.topic?.title}\n            readOnly\n          />\n          <Input\n            label=\"Supervisor\"\n            value={contextData?.topic?.supervisor?.displayName}\n            readOnly\n          />\n        </>\n      )}\n\n      <Input label=\"Title\" value={contextData.title} readOnly />\n      <MultiLineInput\n        label=\"Description\"\n        value={contextData.description}\n        readOnly\n      />\n      <MultiLineInput\n        label=\"Additional Notes\"\n        value={contextData.additionalNotes}\n        readOnly\n      />\n\n      {contextData.isCustomProposal ? (\n        <>\n          <MultiLineInput\n            label=\"Environment\"\n            value={contextData.environment}\n            readOnly\n          />\n          <MultiLineInput\n            label=\"Languages\"\n            value={contextData.languages}\n            readOnly\n          />\n        </>\n      ) : null}\n\n      {currentPhase.phase === 4 ? (\n        <>\n          <PrimaryButton\n            loading={submitting}\n            onClick={() => handleNextStep(true)}\n            endIcon={\n              <Tooltip title=\"Not editable after submission\">\n                <HelpIcon />\n              </Tooltip>\n            }>\n            Submit Proposal\n          </PrimaryButton>\n          <PrimaryButton\n            loading={submitting}\n            onClick={() => handleNextStep(false)}\n            endIcon={\n              <Tooltip title=\"Editable until submitted\">\n                <HelpIcon />\n              </Tooltip>\n            }>\n            Save Proposal as Draft\n          </PrimaryButton>\n        </>\n      ) : (\n        <PrimaryButton\n          loading={submitting}\n          onClick={() => handleNextStep(true)}\n          endIcon={\n            <Tooltip title=\"Not editable after submission\">\n              <HelpIcon />\n            </Tooltip>\n          }>\n          Submit Proposal\n        </PrimaryButton>\n      )}\n    </Container>\n  )\n}\n\nCreateProposal.propTypes = {\n  selectedTopic: PropTypes.string\n}\n\nexport default CreateProposal\n","import React from 'react'\n\nimport * as yup from 'yup'\nimport { useForm, Controller } from 'react-hook-form'\nimport { yupResolver } from '@hookform/resolvers/yup'\n\nimport {\n  Container,\n  Typography,\n  Button,\n  FormControl,\n  Select,\n  MenuItem\n} from '@material-ui/core'\n\nimport Input from './Input'\n\nconst formSchema = yup.object({\n  email: yup.string().email().required(),\n  accountType: yup.string().required()\n})\n\nconst NoRole = props => {\n  const defaultValues = {\n    email: 'studentEmail',\n    type: 'student'\n  }\n\n  /*const { register, handleSubmit, errors, control } = useForm({\n    resolver: yupResolver(formSchema),\n    reValidateMode: 'onChange',\n    defaultValues\n  })\n\n  const onSubmit = data => {\n    console.log(data)\n  }*/\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Typography align=\"center\" style={{ marginTop: '25px' }}>\n        You have not been allowed access to this system.\n      </Typography>\n\n      {/* TODO: Add request access form */}\n\n      {/* <Typography align=\"center\">\n        If you want to request access to the system, please fill out the form\n        below.\n      </Typography>\n\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <Input\n          ref={register}\n          name=\"email\"\n          label=\"Email\"\n          variant=\"outlined\"\n          margin=\"none\"\n          error={!!errors.email}\n          helperText={errors?.email?.message}\n        />\n        <FormControl variant=\"outlined\">\n          <Controller\n            render={({ onChange, value }) => (\n              <Select value={value} onChange={onChange}>\n                <MenuItem value=\"student\">Student</MenuItem>\n                <MenuItem value=\"supervisor\">Supervisor</MenuItem>\n              </Select>\n            )}\n            name=\"status\"\n            control={control}\n            error={!!errors.status}\n            helperText={errors?.status?.message}\n          />\n        </FormControl>\n      </form>\n\n      <Button type=\"submit\">Request Access</Button> */}\n    </Container>\n  )\n}\n\nexport default NoRole\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport { Container, Typography, Button } from '@material-ui/core'\n\nconst NotFound = () => (\n  <Container maxWidth=\"md\">\n    <Typography align=\"center\" variant=\"h3\">\n      The requested page could not be found\n    </Typography>\n\n    <br />\n\n    <center>\n      <Link to=\"/\">\n        <Button variant=\"contained\" color=\"primary\">\n          Back to Homepage\n        </Button>\n      </Link>\n    </center>\n  </Container>\n)\n\nexport default NotFound\n","import React, { useState, useEffect } from 'react'\nimport { Link, useParams } from 'react-router-dom'\nimport PropTypes from 'prop-types'\n\nimport {\n  Container,\n  TableContainer,\n  TableHead,\n  TableBody,\n  Table,\n  TableCell,\n  TableRow,\n  Paper,\n  Typography\n} from '@material-ui/core'\n\nimport api from '../../utils/api.axios'\nimport { proposalStatusToHumanFriendlyString } from '../../utils/proposal'\n\nimport BackButton from '../Buttons/BackButton'\n\nconst TopicProposals = props => {\n  const [loading, setLoading] = useState(false)\n  const [proposals, setProposals] = useState([])\n\n  let { topicId } = useParams()\n  // Get all proposals for the current topic\n  useEffect(() => {\n    api\n      .get(`/topic/proposals/${topicId}`)\n      .then(res => {\n        console.log(res)\n\n        setProposals(res.data.proposals)\n      })\n      .catch(err => {\n        console.log(err)\n      })\n  }, [])\n\n  return (\n    <Container maxWidth=\"lg\">\n      <BackButton />\n      <Typography>Student Proposals</Typography>\n\n      <TableContainer component={Paper}>\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Title</TableCell>\n              <TableCell align=\"center\">Student</TableCell>\n              <TableCell align=\"right\">Status</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {loading ? (\n              <TableRow key=\"loading_supervisor_proposals\">\n                <TableCell colSpan={3} align=\"center\">\n                  Loading Values ...\n                </TableCell>\n              </TableRow>\n            ) : proposals.length === 0 ? (\n              <TableRow key=\"no_supervisor_proposals\">\n                <TableCell colSpan={3} align=\"center\">\n                  You have no proposals to review\n                </TableCell>\n              </TableRow>\n            ) : (\n              proposals.map(proposal => (\n                <TableRow key={proposal.id}>\n                  <TableCell>\n                    <Link to={`/proposal/view/${proposal._id}`}>\n                      {proposal.title}\n                    </Link>\n                  </TableCell>\n                  <TableCell align=\"center\">\n                    {proposal.student.displayName}\n                  </TableCell>\n                  <TableCell align=\"right\">\n                    {proposalStatusToHumanFriendlyString(proposal.status)}\n                  </TableCell>\n                </TableRow>\n              ))\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n    </Container>\n  )\n}\n\nTopicProposals.defaultProps = {\n  topic: {},\n  dialogOpen: false,\n  setDialogOpen: () => {},\n  refresh: () => {}\n}\n\nTopicProposals.propTypes = {\n  topic: PropTypes.object.isRequired,\n  dialogOpen: PropTypes.bool.isRequired,\n  setDialogOpen: PropTypes.func.isRequired,\n  refresh: PropTypes.func.isRequired\n}\n\nexport default TopicProposals\n","import React, { useEffect, useState } from 'react'\nimport { useParams, useHistory } from 'react-router-dom'\n\nimport {\n  Container,\n  Typography,\n  FormControl,\n  Divider,\n  Select,\n  MenuItem,\n  Grid,\n  FormHelperText,\n  Paper\n} from '@material-ui/core'\nimport Input from '../Input'\nimport MultiLineInput from '../MultiLineInput'\nimport PrimaryButton from '../PrimaryButton'\nimport { Can } from '../../Auth/Can'\nimport Proposal from '../../Auth/Proposal'\n\nimport * as yup from 'yup'\nimport { useForm, Controller } from 'react-hook-form'\nimport { yupResolver } from '@hookform/resolvers/yup'\n\nimport BackButton from '../Buttons/BackButton'\n\nimport api from '../../utils/api.axios'\n\nconst formSchema = yup.object({\n  responseType: yup\n    .string()\n    .oneOf(\n      ['pending_edits', 'accepted', 'rejected'],\n      'Please select a response type'\n    ),\n  message: yup.string().when('responseType', {\n    is: 'pending_edits',\n    then: yup.string().required('Must include a message when requesting edits')\n  })\n})\n\nconst defaultValues = {\n  responseType: 'unselected',\n  message: ''\n}\n\nconst ViewProposal = props => {\n  const [proposal, setProposal] = useState()\n  const [loading, setLoading] = useState(true)\n  const [submittingResponse, setSubmittingResponse] = useState(false)\n\n  const { register, handleSubmit, errors, control } = useForm({\n    resolver: yupResolver(formSchema),\n    reValidateMode: 'onChange',\n    defaultValues\n  })\n\n  const { id } = useParams()\n\n  useEffect(() => {\n    refreshProposal()\n  }, [])\n\n  const refreshProposal = () => {\n    api\n      .get(`/proposal/${id}`)\n      .then(res => {\n        console.log(res)\n\n        setProposal(res.data.proposal)\n      })\n      .catch(err => {\n        console.log(err)\n      })\n      .finally(() => {\n        setLoading(false)\n      })\n  }\n\n  const onSubmit = data => {\n    setSubmittingResponse(true)\n    api\n      .post(`/proposal/respond/${proposal._id}`, data)\n      .then(res => {\n        console.log(res)\n        refreshProposal()\n      })\n      .catch(err => {\n        console.log(err)\n      })\n      .finally(() => {\n        setSubmittingResponse(false)\n      })\n  }\n\n  if (loading) {\n    return <h1>Loading</h1>\n  }\n\n  return (\n    <Container maxWidth=\"lg\">\n      <BackButton />\n      <Typography>Proposal Details</Typography>\n      <Input value={proposal.title} label=\"Title\" variant=\"outlined\" readOnly />\n      <MultiLineInput\n        label=\"Description\"\n        value={proposal.description}\n        readOnly\n      />\n\n      <MultiLineInput\n        label=\"Choose Me Message\"\n        value={proposal.chooseMessage}\n        readOnly\n      />\n\n      <MultiLineInput\n        label=\"Additional Notes\"\n        value={proposal.additionalNotes}\n        readOnly\n      />\n\n      {proposal.type === 'studentDefined' ? (\n        <>\n          <MultiLineInput\n            label=\"Environment\"\n            value={proposal.environment}\n            readOnly\n          />\n          <MultiLineInput\n            label=\"Languages\"\n            value={proposal.languages}\n            readOnly\n          />\n        </>\n      ) : null}\n\n      {proposal.status === 'submitted' && (\n        <Can I=\"respond\" this={new Proposal(proposal)}>\n          <form onSubmit={handleSubmit(onSubmit)}>\n            <Paper elevation={2} style={{ padding: '20px', marginTop: '10px' }}>\n              <Typography align=\"center\" component=\"h1\" variant=\"h5\">\n                Proposal Response\n              </Typography>\n              <Grid container>\n                <Grid item xs={2}>\n                  <FormControl\n                    variant=\"outlined\"\n                    style={{ width: '100%' }}\n                    error={!!errors.responseType}>\n                    <Controller\n                      render={({ onChange, value }) => (\n                        <Select\n                          value={value}\n                          onChange={e => onChange(e.target.value)}\n                          style={{ marginTop: '16px' }}>\n                          <MenuItem value=\"unselected\" selected disabled>\n                            Choose One\n                          </MenuItem>\n                          <MenuItem\n                            value=\"pending_edits\"\n                            style={{ color: 'orange' }}>\n                            Request Edits\n                          </MenuItem>\n                          <MenuItem value=\"accepted\" style={{ color: 'green' }}>\n                            Accept\n                          </MenuItem>\n                          <MenuItem value=\"rejected\" style={{ color: 'red' }}>\n                            Reject\n                          </MenuItem>\n                        </Select>\n                      )}\n                      name=\"responseType\"\n                      control={control}\n                    />\n                  </FormControl>\n                  <FormHelperText error={!!errors.responseType}>\n                    {errors?.responseType?.message}\n                  </FormHelperText>\n                </Grid>\n                <Grid item xs={8}>\n                  <Input\n                    inputRef={register}\n                    name=\"message\"\n                    placeholder=\"Message to Student\"\n                    error={!!errors.message}\n                    helperText={errors?.message?.message}\n                  />\n                </Grid>\n                <Grid item xs={2}>\n                  <PrimaryButton\n                    style={{ height: '56px', marginTop: '16px' }}\n                    loading={submittingResponse}>\n                    Submit\n                  </PrimaryButton>\n                </Grid>\n              </Grid>\n            </Paper>\n          </form>\n        </Can>\n      )}\n    </Container>\n  )\n}\n\nexport default ViewProposal\n","import React, { useState, useEffect } from 'react'\n\nimport api from '../utils/api.axios'\nimport moment from 'moment'\n\nimport {\n  Typography,\n  Container,\n  TableContainer,\n  TableHead,\n  TableBody,\n  TableCell,\n  TableRow,\n  Paper,\n  Table\n} from '@material-ui/core'\nimport { DatePicker } from 'antd'\nimport PrimaryButton from './PrimaryButton'\nimport CollapsableAlert from './CollapsableAlert'\n\nconst PhaseManagement = props => {\n  const [loading, setLoading] = useState(true)\n  const [updating, setUpdating] = useState(false)\n  const [phases, setPhases] = useState()\n  const [alert, setAlert] = useState({\n    message: '',\n    severity: 'success'\n  })\n  const [alertOpen, setAlertOpen] = useState(false)\n\n  useEffect(() => {\n    api\n      .get('/phase/all')\n      .then(res => {\n        console.log(res)\n        let phasesData = res.data.phases.map(p => ({\n          phase: p._id,\n          date: moment(p.start_date)\n        }))\n        console.log(phasesData)\n        setPhases(phasesData)\n      })\n      .catch(err => {\n        console.log(err)\n      })\n      .finally(() => {\n        setLoading(false)\n      })\n  }, [])\n\n  const onSubmit = () => {\n    for (let i = 0; i < phases.length; i++) {\n      let p = phases[i]\n      if (i < phases.length - 1 && p.date.isAfter(phases[i + 1].date)) {\n        setAlert({\n          message: `Phase ${p.phase} start date must be before Phase ${\n            p.phase + 1\n          }'s start date`,\n          severity: 'error',\n          hidden: false\n        })\n        setAlertOpen(true)\n        return\n      }\n    }\n\n    let body = phases.map(p => ({\n      phase: p.phase,\n      date: p.date\n    }))\n\n    setUpdating(true)\n    api\n      .post('/phase/edit', { phases: body })\n      .then(res => {\n        console.log(res)\n        setAlert({\n          hidden: false,\n          message: 'Phase dates updated',\n          severity: 'success'\n        })\n      })\n      .catch(err => {\n        console.log(err)\n        setAlert({\n          message: 'Phase dates not updated',\n          severity: 'error'\n        })\n      })\n      .finally(() => {\n        setUpdating(false)\n        setAlertOpen(true)\n      })\n  }\n\n  const updatePhase = (value, phase) => {\n    console.log('Updating phase', phase, value)\n    let temp = [...phases]\n\n    temp[phase - 1].date = value\n\n    console.log(temp)\n\n    setPhases(temp)\n  }\n\n  if (loading) {\n    return <h1>Loading</h1>\n  }\n\n  return (\n    <Container maxWidth=\"lg\">\n      <Typography variant=\"h4\" align=\"center\">\n        Phase Management\n      </Typography>\n\n      <Typography>\n        {\n          'To select a date, open the date selection input, select your required date, and click the \"Ok\" button in the bottom right of the input panel.'\n        }\n      </Typography>\n\n      <TableContainer component={Paper}>\n        <Table aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Phase No.</TableCell>\n              <TableCell>Phase Start Date</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody>\n            {phases.length === 0 ? (\n              <TableRow>\n                <TableCell>No Phases to display</TableCell>\n              </TableRow>\n            ) : (\n              phases.map(phase => (\n                <TableRow key={phase.id}>\n                  <TableCell>{phase.phase}</TableCell>\n                  <TableCell>\n                    <DatePicker\n                      defaultValue={phase.date}\n                      onOk={val => updatePhase(val, phase.phase)}\n                      format=\"DD / MMM / YY HH:mm\"\n                      showTime={{ format: 'HH:mm' }}\n                      size=\"large\"\n                      renderExtraFooter={() =>\n                        'Phase will end 5 minutes before following phase start'\n                      }\n                    />\n                  </TableCell>\n                </TableRow>\n              ))\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n\n      <PrimaryButton onClick={onSubmit} loading={updating}>\n        Update Phase Dates\n      </PrimaryButton>\n      <CollapsableAlert\n        open={alertOpen}\n        setOpen={setAlertOpen}\n        message={alert.message}\n        severity={alert.severity}\n      />\n    </Container>\n  )\n}\n\nexport default PhaseManagement\n","import React from 'react'\nimport { Typography as T, Container } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles(theme => ({\n  heading: {\n    fontSize: '28px'\n  },\n  paragraph: {\n    fontSize: '16px'\n  }\n}))\n\nexport default function HelpPage() {\n  const classes = useStyles()\n  return (\n    <Container maxWidth=\"lg\">\n      <T className={classes.heading}>What are Topics?</T>\n      <T className={classes.paragraph}>\n        A topic is a FYP project idea which is supplied by a Supervisor.\n      </T>\n      <T className={classes.heading}>What are Proposals?</T>\n      <T className={classes.paragraph}>\n        A proposal is a students intrepretation of a topic, proposals can be\n        both supervisor defined (The Supervisor has thought of the idea) or\n        student defined (The Student has thought of the idea). Student defined\n        proposals can only be sent to supervisors who have made themselves\n        available to supervise these types of project ideas.\n      </T>\n      <T className={classes.heading}>What are Phases?</T>\n      <T className={classes.paragraph}>\n        Phases are used to allow specific actions to be carried out during\n        different time ranges.\n      </T>\n    </Container>\n  )\n}\n","import React from 'react'\n\nimport { Container, Typography } from '@material-ui/core'\n\nconst APIUnavailable = props => {\n  return (\n    <Container maxWidth=\"md\">\n      <center>\n        <Typography>\n          Unable to connect to API Service, please try refreshing the page.\n        </Typography>\n        <br />\n        <Typography>\n          If the issue persists, please ensure you have an internet connection.\n        </Typography>\n      </center>\n    </Container>\n  )\n}\n\nexport default APIUnavailable\n","import React, { useEffect, useState, useContext } from 'react'\nimport PropTypes from 'prop-types'\nimport { Switch, Route } from 'react-router-dom'\nimport {\n  MsalAuthenticationTemplate,\n  useMsal,\n  useAccount\n} from '@azure/msal-react'\nimport { InteractionType } from '@azure/msal-browser'\n\nimport { loginRequest, config } from './config/msal-config'\n\nimport { AuthContext } from './contexts/AuthContext'\nimport { PhaseContext } from './contexts/PhaseContext'\nimport { AbilityContext } from './Auth/Can'\nimport generateAbilitiesFor from './Auth/ability'\nimport api, { setup as apiSetup } from './utils/api.axios'\nimport axiosGraphInstance, { setup as graphSetup } from './utils/graph.axios'\n\nimport Topic from './Auth/Topic'\nimport Phase from './Auth/Phase'\nimport Proposal from './Auth/Proposal'\n\nimport { Toolbar } from '@material-ui/core'\n\nimport { CreateProposalContextProvider } from './contexts/CreateProposalContext'\n\nimport ErrorComponent from './components/Auth/ErrorComponent'\nimport Loading from './components/Auth/Loading'\nimport AppLoading from './components/AppLoading'\n\nimport TopicManagement from './components/TopicManagement'\nimport TopicList from './components/TopicList'\nimport AddTopicForm from './components/AddTopicForm'\nimport Welcome from './components/Welcome'\n\n// Student Imports\nimport StudentAssignment from './components/UserManagement/Assignment/StudentAssignment'\nimport StudentManagement from './components/UserManagement/StudentManagement'\n\n// Supervisor Imports\nimport SupervisorAssignment from './components/UserManagement/Assignment/SupervisorAssignment'\nimport SupervisorManagement from './components/UserManagement/SupervisorManagement'\n\n// Coordinator Imports\nimport CoordinatorManagement from './components/UserManagement/Coordinator/CoordinatorManagement'\nimport Header from './components/Header'\nimport ManageProposal from './components/Proposals/ManageProposal'\nimport ViewTopic from './components/ViewTopic'\n\nimport CreateProposal from './components/Proposals/CreateProposal'\nimport CreateProposalStep2 from './components/Proposals/CreateProposalStep2'\nimport CreateProposalFinish from './components/Proposals/CreateProposalFinish'\n\nimport NoRole from './components/NoRole'\nimport NotFound from './components/NotFound'\n\nimport TopicProposals from './components/TopicManagement/TopicProposals'\nimport ViewProposal from './components/Proposals/ViewProposal'\n\nimport PhaseManagement from './components/PhaseManagement'\n\nimport HelpPage from './components/Help/HelpPage'\nimport APIUnavailable from './components/APIUnavailable'\n\nfunction App() {\n  const [appReady, setAppReady] = useState(false)\n  const { instance, accounts, inProgress } = useMsal()\n  const account = useAccount(accounts[0] || {})\n\n  const { user, setUserObject } = useContext(AuthContext)\n  const { setCurrentPhase } = useContext(PhaseContext)\n\n  const authRequest = {\n    ...loginRequest\n  }\n\n  useEffect(() => {\n    if (account && inProgress === 'none') {\n      console.log('Setting up api')\n      apiSetup(instance, account)\n        .then(r => {\n          console.log('API Setup returned', r)\n          graphSetup(instance, account)\n          instance\n            .acquireTokenSilent({\n              ...loginRequest,\n              account: account\n            })\n            .then(async response => {\n              // User is logged in\n              // FIXME: This is being called twice on user login, 2 requests to ms graph\n              console.log('User is logged in')\n\n              axiosGraphInstance\n                .get(`${config.endpoints.graph}/me/appRoleAssignments`)\n                .then(async resp => {\n                  let rolePriority = -1\n                  let role = null\n                  for (const roleData of resp.data.value) {\n                    const roleObject = config.appRoles[roleData.appRoleId]\n\n                    if (!roleObject) {\n                      console.log('Unknown role: ' + JSON.stringify(roleData))\n                      continue\n                    }\n\n                    const { priority, displayName } = roleObject\n                    if (priority > rolePriority) {\n                      rolePriority = priority\n                      role = displayName\n                    }\n                  }\n\n                  let phaseDoc = await api.get('/phase').catch(err => {\n                    console.log('Could not retrieve phase')\n                    console.log(err)\n                  })\n\n                  let phase = null\n\n                  if (phaseDoc.data.phase) {\n                    phase = new Phase({\n                      phase: phaseDoc.data.phase._id,\n                      startDate: phaseDoc.data.phase.start_date,\n                      endDate: phaseDoc.data.phase.end_date\n                    })\n                  } else {\n                    phase = new Phase({\n                      phase: 0,\n                      startDate: null,\n                      endDate: null\n                    })\n                  }\n                  setCurrentPhase(phase)\n\n                  let userObject = {\n                    role,\n                    id: account.localAccountId\n                  }\n\n                  if (userObject.role) {\n                    setUserObject(userObject)\n                    setAppReady(true)\n                  } else {\n                    // User has no assigned role\n                    setUserObject(userObject)\n                    setAppReady(true)\n                  }\n                })\n                .catch(err => {\n                  alert('Could not initialise your account, please try again')\n                  console.log(err)\n                })\n            })\n        })\n        .catch(err => {\n          // TODO: Handle unavailable API error\n          console.log(err)\n          alert('Unable to connect to API')\n        })\n    }\n  }, [account, inProgress, instance])\n\n  return (\n    <MsalAuthenticationTemplate\n      interactionType={InteractionType.Redirect}\n      authenticationRequest={authRequest}\n      errorComponent={ErrorComponent}\n      loadingComponent={Loading}>\n      {appReady ? (\n        <AbilityContext.Provider value={generateAbilitiesFor(user)}>\n          <Header />\n          <Toolbar />\n          <Pages user={user} />\n        </AbilityContext.Provider>\n      ) : (\n        <AppLoading />\n      )}\n    </MsalAuthenticationTemplate>\n  )\n}\n\nconst Pages = props => {\n  const ability = generateAbilitiesFor(props.user)\n  const { currentPhase } = useContext(PhaseContext)\n\n  const allowForPhase = phase => {\n    return Array.isArray(phase)\n      ? phase.includes(currentPhase.phase)\n      : phase === currentPhase.phase\n  }\n\n  // Implement Can functionality to only show available routes\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        {currentPhase.phase !== 0 ? (\n          props?.user?.role ? (\n            <Welcome />\n          ) : (\n            <NoRole />\n          )\n        ) : (\n          <h1>Switching Phase Please Wait</h1>\n        )}\n      </Route>\n\n      <Route exact path=\"/help\">\n        <HelpPage />\n      </Route>\n\n      <Route path=\"/api-unavailable\">\n        <APIUnavailable />\n      </Route>\n\n      {ability.can('read', Topic.name) && allowForPhase([3, 4]) && (\n        <Route exact path=\"/topics\">\n          <TopicList />\n        </Route>\n      )}\n\n      <Route path=\"/topics/view/:id\">\n        <ViewTopic />\n      </Route>\n\n      {ability.can('create', Topic.name) && allowForPhase(2) && (\n        <Route path=\"/topics/add\" component={AddTopicForm} />\n      )}\n\n      {ability.can('manage', Topic.name) && allowForPhase([2, 3, 4]) && (\n        <Route path=\"/topics/manage\" component={TopicManagement} />\n      )}\n\n      {ability.can('read', Proposal.name) && (\n        <Route path=\"/topic/:topicId\">\n          <TopicProposals />\n        </Route>\n      )}\n\n      {ability.can('manage', Proposal.name) && (\n        <Route exact path=\"/proposals\" component={ManageProposal} />\n      )}\n\n      {ability.can('create', Proposal.name) && (\n        <Route exact path=\"/proposals/add/step2\">\n          <CreateProposalContextProvider>\n            <CreateProposalStep2 />\n          </CreateProposalContextProvider>\n        </Route>\n      )}\n\n      {ability.can('create', Proposal.name) && (\n        <Route exact path=\"/proposals/add/finish\">\n          <CreateProposalContextProvider>\n            <CreateProposalFinish />\n          </CreateProposalContextProvider>\n        </Route>\n      )}\n\n      {ability.can('create', Proposal.name) && (\n        <Route path=\"/proposals/add/:topicId?\">\n          <CreateProposalContextProvider>\n            <CreateProposal />\n          </CreateProposalContextProvider>\n        </Route>\n      )}\n\n      {ability.can('read', Proposal.name) && (\n        <Route exact path=\"/proposal/view/:id\">\n          <ViewProposal />\n        </Route>\n      )}\n\n      {ability.can('manage', 'Student') && (\n        <Route path=\"/student/assign\">\n          <StudentAssignment />\n        </Route>\n      )}\n\n      {ability.can('manage', 'Student') && (\n        <Route path=\"/student/manage\">\n          <StudentManagement />\n        </Route>\n      )}\n\n      {ability.can('manage', 'Supervisor') && (\n        <Route path=\"/supervisor/assign\">\n          <SupervisorAssignment />\n        </Route>\n      )}\n\n      {ability.can('manage', 'Supervisor') && (\n        <Route path=\"/supervisor/manage\">\n          <SupervisorManagement />\n        </Route>\n      )}\n\n      {ability.can('manage', 'Coordinator') && allowForPhase(1) && (\n        <Route path=\"/coordinator\">\n          <CoordinatorManagement />\n        </Route>\n      )}\n\n      {ability.can('update', Phase.name) && (\n        <Route path=\"/phase/manage\">\n          <PhaseManagement />\n        </Route>\n      )}\n\n      <Route component={NotFound} />\n    </Switch>\n  )\n}\n\nPages.propTypes = {\n  user: PropTypes.object.isRequired\n}\n\nexport default App\n","import { unstable_createMuiStrictModeTheme as createMuiTheme } from '@material-ui/core/styles'\nimport red from '@material-ui/core/colors/red'\n\n// Create a theme instance.\nexport const theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#556cd6'\n    },\n    secondary: {\n      main: '#f55d42'\n    },\n    error: {\n      main: red.A400\n    },\n    background: {\n      default: '#fff'\n    }\n  }\n})\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport App from './App'\nimport './index.css'\n\nimport { PublicClientApplication } from '@azure/msal-browser'\nimport AuthContextProvider from './contexts/AuthContext'\nimport PhaseContextProvider from './contexts/PhaseContext'\nimport { msalConfig } from './config/msal-config'\n\nimport { ThemeProvider } from '@material-ui/core/styles'\nimport { MsalProvider } from '@azure/msal-react'\n\nimport { theme } from './styles/theme.js'\n\nconst msalInstance = new PublicClientApplication(msalConfig)\n\nconst AppProvider = () => (\n  <Router>\n    <ThemeProvider theme={theme}>\n      <MsalProvider instance={msalInstance}>\n        <AuthContextProvider>\n          <PhaseContextProvider>\n            <React.StrictMode>\n              <App />\n            </React.StrictMode>\n          </PhaseContextProvider>\n        </AuthContextProvider>\n      </MsalProvider>\n    </ThemeProvider>\n  </Router>\n)\n\nReactDOM.render(<AppProvider />, document.getElementById('root'))\n"],"sourceRoot":""}